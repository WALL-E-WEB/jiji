import{_ as s,v as a,b as n,R as l}from"./chunks/framework.caa0fbaf.js";const e="/assets/89dbabaf7645420484af0d21b7c56905.3a698a95.jpeg",D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"study/11.前端性能/前端优化.md","filePath":"study/11.前端性能/前端优化.md","lastUpdated":1692205004000}'),p={name:"study/11.前端性能/前端优化.md"},o=l(`<p>前端优化:</p><p><a href="https://alienzhou.github.io/fe-performance-journey/" target="_blank" rel="noreferrer">https://alienzhou.github.io/fe-performance-journey/</a></p><h2 id="my-anchor" tabindex="-1">网络层面: <a class="header-anchor" href="#my-anchor" aria-label="Permalink to &quot;网络层面:&quot;">​</a></h2><h3 id="my-anchor-1" tabindex="-1">减少http请求 合并请求; <a class="header-anchor" href="#my-anchor-1" aria-label="Permalink to &quot;减少http请求 合并请求;&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">使用字体图标</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">小图片压缩base64</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">3</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">合并css文件</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="my-anchor-2" tabindex="-1">压缩资源 <a class="header-anchor" href="#my-anchor-2" aria-label="Permalink to &quot;压缩资源&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">压缩js</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">css</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">image</span></span>
<span class="line"><span style="color:#A6ACCD;">js</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">css进行压缩减少冗余</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="my-anchor-3" tabindex="-1">gzip压缩 <a class="header-anchor" href="#my-anchor-3" aria-label="Permalink to &quot;gzip压缩&quot;">​</a></h3><h3 id="my-anchor-4" tabindex="-1">使用CDN <a class="header-anchor" href="#my-anchor-4" aria-label="Permalink to &quot;使用CDN&quot;">​</a></h3><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">https://www.w3.org/TR/resource-hints/#preconnect</span></span>
<span class="line"><span style="color:#A6ACCD;">// 预先解析域名</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dns-prefetch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">//baidu.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">preconnect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">//sample.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="my-anchor-5" tabindex="-1">避免空src或者是href值 <a class="header-anchor" href="#my-anchor-5" aria-label="Permalink to &quot;避免空src或者是href值&quot;">​</a></h3><h3 id="my-anchor-6" tabindex="-1">CSS放在顶部，JS放在底部 <a class="header-anchor" href="#my-anchor-6" aria-label="Permalink to &quot;CSS放在顶部，JS放在底部&quot;">​</a></h3><h3 id="my-anchor-7" tabindex="-1">强缓存与协商缓存 <a class="header-anchor" href="#my-anchor-7" aria-label="Permalink to &quot;强缓存与协商缓存&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">from disk </span><span style="color:#82AAFF;">cache</span><span style="color:#A6ACCD;">(磁盘缓存)、</span></span>
<span class="line"><span style="color:#A6ACCD;">from memory </span><span style="color:#82AAFF;">cache</span><span style="color:#A6ACCD;">(内存缓存)、</span></span>
<span class="line"><span style="color:#FFCB6B;">读取缓存的顺序为</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">memory –</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> disk</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Expires:</span></span>
<span class="line"><span style="color:#A6ACCD;">用来指定资源到期的时间，是服务器端的具体的时间点。</span></span>
<span class="line"><span style="color:#A6ACCD;">Expires=max-age + 请求时间，需要和Last-modified结合使用。</span></span>
<span class="line"><span style="color:#A6ACCD;">缺点:</span></span>
<span class="line"><span style="color:#A6ACCD;">Expires 是 HTTP/1 的产物，受限于本地时间，如果修改了本地时间，可能会造成缓存失效。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Cache-Control:</span></span>
<span class="line"><span style="color:#A6ACCD;"> 在HTTP/1.1中，Cache-Control是最重要的规则，主要用于控制网页缓存，主要取值为：</span></span>
<span class="line"><span style="color:#A6ACCD;">public：所有内容都将被缓存（客户端和代理服务器都可缓存）</span></span>
<span class="line"><span style="color:#A6ACCD;">private：所有内容只有客户端可以缓存，Cache-Control的默认取值</span></span>
<span class="line"><span style="color:#A6ACCD;">no-cache：客户端缓存内容，但是是否使用缓存则需要经过协商缓存来验证决定(是否与后端保持一至)</span></span>
<span class="line"><span style="color:#A6ACCD;">no-store：所有内容都不会被缓存，即不使用强制缓存，也不使用协商缓存</span></span>
<span class="line"><span style="color:#A6ACCD;">max-age=xxx (xxx is numeric)：缓存内容将在xxx秒后失效</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>协商缓存:</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Last-Modified和If-Modified-Since</span></span>
<span class="line"><span style="color:#A6ACCD;">浏览器首先发送一个请求，让服务端在response header中返回请求的资源上次更新时间，就是last-modified，浏览器会缓存下这个时间。</span></span>
<span class="line"><span style="color:#A6ACCD;">然后浏览器再下次请求中，request header中带上if-modified-since:[保存的last-modified的值]。根据浏览器发送的修改时间和服务端的修改时间进行比对，一致的话代表资源没有改变，服务端返回正文为空的响应，让浏览器中缓存中读取资源，这就大大减小了请求的消耗。</span></span>
<span class="line"><span style="color:#A6ACCD;">由于last-modified依赖的是保存的绝对时间，还是会出现误差的情况：</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">保存的时间是以秒为单位的，1秒内多次修改是无法捕捉到的；</span></span>
<span class="line"><span style="color:#A6ACCD;">各机器读取到的时间不一致，就有出现误差的可能性。为了改善这个问题，提出了使用etag。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">ETag和If</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">None</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Match</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">etag是http协议提供的若干机制中的一种Web缓存验证机制，并且允许客户端进行缓存协商。生成etag常用的方法包括对资源内容使用抗碰撞散列函数，使用最近修改的时间戳的哈希值，甚至只是一个版本号。 和last</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">modified一样</span><span style="color:#89DDFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">浏览器会先发送一个请求得到etag的值，然后再下一次请求在request header中带上if</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">none</span><span style="color:#89DDFF;">-</span><span style="color:#FFCB6B;">match</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">[保存的etag的值]。</span></span>
<span class="line"><span style="color:#A6ACCD;">通过发送的etag的值和服务端重新生成的etag的值进行比对，如果一致代表资源没有改变，服务端返回正文为空的响应，告诉浏览器从缓存中读取资源。</span></span>
<span class="line"><span style="color:#A6ACCD;">etag能够解决last</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">modified的一些缺点，但是etag每次服务端生成都需要进行读写操作，而last</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">modified只需要读取操作，从这方面来看，etag的消耗是更大的。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="`+e+`" alt="img"></p><h3 id="my-anchor-8" tabindex="-1">懒加载 <a class="header-anchor" href="#my-anchor-8" aria-label="Permalink to &quot;懒加载&quot;">​</a></h3><h2 id="my-anchor-9" tabindex="-1">浏览器层面: <a class="header-anchor" href="#my-anchor-9" aria-label="Permalink to &quot;浏览器层面:&quot;">​</a></h2><h3 id="my-anchor-10" tabindex="-1">减少重排reflow、重绘repaint; <a class="header-anchor" href="#my-anchor-10" aria-label="Permalink to &quot;减少重排reflow、重绘repaint;&quot;">​</a></h3><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">1.尽量减少频繁的增加,修改,删除元素;</span></span>
<span class="line"><span style="color:#A6ACCD;">2.尽量通过class来设计元素样式，切忌用style 多次操作单个属性;</span></span>
<span class="line"><span style="color:#A6ACCD;">3.尽量用transform</span></span>
<span class="line"><span style="color:#A6ACCD;">	浏览器会针对transform开启GPU加速;</span></span>
<span class="line"><span style="color:#A6ACCD;">	transform 属于合成属性（composite property),</span></span>
<span class="line"><span style="color:#A6ACCD;">	对合成属性进行 transition/animation </span></span>
<span class="line"><span style="color:#A6ACCD;">	动画将会创建一个合成层（composite layer），</span></span>
<span class="line"><span style="color:#A6ACCD;">	这使得被动画元素在一个独立的层中进行动画。不会引起reflow和repaint.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">	css动画触发过程:reflow repaint composite</span></span>
<span class="line"><span style="color:#A6ACCD;">	(will-change: transform;提升为合成层)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">4.dom操作改为&quot;离线&quot;执行;</span></span>
<span class="line"><span style="color:#A6ACCD;">	documentFragment;</span></span>
<span class="line"><span style="color:#A6ACCD;">	display</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h5>transform层创立的条件如下：</h5><ul><li>3D 或透视变换 CSS 属性</li><li>使用加速视频解码的 元素</li><li>拥有 3D (WebGL) 上下文或加速的 2D 上下文的 元素</li><li>复合插件(如 Flash)</li><li>进行 opacity/transform 动画的元素</li><li>拥有加速 CSS filters 的元素</li><li>元素有一个包含复合层的后代节点(换句话说，就是一个元素拥有一个子元素，该子元素在自己的层里)</li><li>元素有一个 z-index 较低且包含一个复合层的兄弟元素(换句话说就是该元素在复合层上面渲染)</li></ul><p>​</p><h2 id="my-anchor-11" tabindex="-1">代码层面: <a class="header-anchor" href="#my-anchor-11" aria-label="Permalink to &quot;代码层面:&quot;">​</a></h2><ul><li><p>js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">defer 会在 HTML 解析完成后，按照脚本出现的次序再顺序执行；</span></span>
<span class="line"><span style="color:#A6ACCD;">async 则是下载完成就立即开始执行，同时阻塞页面解析，不保证脚本间的执行顺序；</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><p>优化方式</p><p>懒加载</p><p>repload</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">link标签中  更早加载此文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">preload</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../vue.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">as</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">script</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>prefetch</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">闲时加载 非首页需要资源 或</span></span>
<span class="line"><span style="color:#A6ACCD;">Predictive prefetch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prefetch</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../vue.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">as</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">script</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>cache</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>数据压缩优化</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Broti</span></span>
<span class="line"><span style="color:#A6ACCD;"> 开源数据压缩程序库</span></span>
<span class="line"><span style="color:#A6ACCD;"> 专为HTTP传输优化</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">HTTP2.0 终究办法</span></span>
<span class="line"><span style="color:#A6ACCD;">	头文件压缩</span></span>
<span class="line"><span style="color:#A6ACCD;">	HPACK</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">Cookie-less domain</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Minification</span></span>
<span class="line"><span style="color:#A6ACCD;"> 牺牲代码可读性</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">减少文件体积</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,41),r=[o];function c(t,i,b,d,y,u){return a(),n("div",null,r)}const C=s(p,[["render",c]]);export{D as __pageData,C as default};
