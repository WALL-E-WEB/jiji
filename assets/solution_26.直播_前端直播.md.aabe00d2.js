import{_ as a,v as t,b as e,R as r}from"./chunks/framework.caa0fbaf.js";const f=JSON.parse('{"title":"直播","description":"","frontmatter":{},"headers":[],"relativePath":"solution/26.直播/前端直播.md","filePath":"solution/26.直播/前端直播.md","lastUpdated":1692205004000}'),o={name:"solution/26.直播/前端直播.md"},l=r('<h1 id="my-anchor" tabindex="-1">直播 <a class="header-anchor" href="#my-anchor" aria-label="Permalink to &quot;直播&quot;">​</a></h1><h2 id="my-anchor-1" tabindex="-1">直播压缩编码类型 <a class="header-anchor" href="#my-anchor-1" aria-label="Permalink to &quot;直播压缩编码类型&quot;">​</a></h2><p>H.264</p><p>AAC</p><ol><li>H.264：H.264是目前最常用的视频压缩编码格式，它具有高压缩比和良好的视频质量，适用于实时直播和点播。</li><li>H.265：H.265是H.264的升级版本，也被称为HEVC（High Efficiency Video Coding），它在相同视频质量下可以实现更高的压缩比，但相应地需要更高的计算资源。</li><li>VP9：VP9是由Google开发的开源视频编码格式，它提供了与H.265相媲美的压缩性能，但更加适用于WebRTC和WebM等Web应用。</li><li>AV1：AV1是由Alliance for Open Media开发的开源视频编码格式，它具有更高的压缩性能和更低的比特率，但需要更高的计算资源。</li></ol><h2 id="my-anchor-2" tabindex="-1">视频格式与兼容 <a class="header-anchor" href="#my-anchor-2" aria-label="Permalink to &quot;视频格式与兼容&quot;">​</a></h2><table><thead><tr><th>格式|浏览器</th><th>Chrome</th><th>Safari</th></tr></thead><tbody><tr><td>Mp4</td><td>✅</td><td>✅</td></tr><tr><td>webm</td><td>✅</td><td></td></tr><tr><td>hls</td><td></td><td>✅</td></tr><tr><td>flv</td><td></td><td></td></tr></tbody></table><h2 id="my-anchor-3" tabindex="-1">直播协议 <a class="header-anchor" href="#my-anchor-3" aria-label="Permalink to &quot;直播协议&quot;">​</a></h2><ol><li>HLS 协议</li><li>RTMP 协议</li><li>HTTP-FLV 协议</li></ol><h3 id="my-anchor-4" tabindex="-1">HLS协议 <a class="header-anchor" href="#my-anchor-4" aria-label="Permalink to &quot;HLS协议&quot;">​</a></h3><p>HTTP Live Streaming</p><p>HLS协议的工作原理如下：</p><ol><li>服务器将整个视频文件切割成多个小的.ts文件，每个文件通常持续几秒钟。</li><li>服务器生成一个.m3u8文件，该文件是一个索引文件，包含了所有.ts文件的地址以及其他相关信息。</li><li>客户端请求.m3u8文件，服务器返回该文件。</li><li>客户端根据.m3u8文件中的地址信息，依次请求.ts文件进行播放。</li><li>客户端根据.ts文件的时间戳和持续时间，按照顺序进行播放，实现流媒体的连续播放。</li></ol><p><a href="https://www.jianshu.com/p/2ce402a485ca" target="_blank" rel="noreferrer">HTTP Live Streaming (HLS) - 概念 - 简书 (jianshu.com)</a></p><h3 id="my-anchor-5" tabindex="-1">RTMP 协议 <a class="header-anchor" href="#my-anchor-5" aria-label="Permalink to &quot;RTMP 协议&quot;">​</a></h3><h3 id="my-anchor-6" tabindex="-1">HTTP-FLV 协议 <a class="header-anchor" href="#my-anchor-6" aria-label="Permalink to &quot;HTTP-FLV 协议&quot;">​</a></h3><p>flv.js iPhone ios 不支持；</p><p><a href="https://link.segmentfault.com/?enc=Jr7aBV17m%2FAufpwhILNybA%3D%3D.BoeoQry2xL%2FZsS52wUBNij7Aun1RvQWMKAqIzFxEFHIoaOWH9it7q%2B9hl5uUIU0JhlcYRIpedHQSsTOn2SbNx3765agjt6yLxFTNuHTMIo4%3D" target="_blank" rel="noreferrer">Media Source Extensions</a>是一种标准,定义了我们可以通过JavaScript创建媒体流，并使用<code>&lt;audio&gt;</code>和&lt;<code>video&gt;</code>元素进行播放。</p><h2 id="my-anchor-7" tabindex="-1">直播库 <a class="header-anchor" href="#my-anchor-7" aria-label="Permalink to &quot;直播库&quot;">​</a></h2><ol><li>flvjs</li><li>videojs</li><li>hlsjs</li></ol><h3 id="my-anchor-8" tabindex="-1">flv <a class="header-anchor" href="#my-anchor-8" aria-label="Permalink to &quot;flv&quot;">​</a></h3><p><a href="https://segmentfault.com/a/1190000024444683" target="_blank" rel="noreferrer">javascript - flv.js源码知识点（上） - yangyiliang - SegmentFault 思否</a></p>',22),i=[l];function h(n,d,s,c,m,u){return t(),e("div",null,i)}const b=a(o,[["render",h]]);export{f as __pageData,b as default};
