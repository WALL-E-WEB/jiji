"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7350],{6077:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-d1feeaa0",path:"/study/10.Vue/VUE-Router.html",title:"VUE-Router 路由",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"vue-router路由",slug:"vue-router路由",children:[]},{level:2,title:"1.组件导航创建",slug:"_1-组件导航创建",children:[]},{level:2,title:"2.传参方式",slug:"_2-传参方式",children:[]},{level:2,title:"3.children-子路由",slug:"_3-children-子路由",children:[]},{level:2,title:"4.导航守卫",slug:"_4-导航守卫",children:[{level:3,title:"全局守卫",slug:"全局守卫",children:[]},{level:3,title:"路由独享守卫",slug:"路由独享守卫",children:[]},{level:3,title:"组件内守卫",slug:"组件内守卫",children:[]},{level:3,title:"路由解析流程",slug:"路由解析流程",children:[{level:4,title:"全局守卫",slug:"全局守卫-1",children:[]},{level:4,title:"路由独享守卫",slug:"路由独享守卫-1",children:[]},{level:4,title:"组件内守卫",slug:"组件内守卫-1",children:[]},{level:4,title:"vue-router是如何响应 路由参数变化的:",slug:"vue-router是如何响应-路由参数变化的",children:[]},{level:4,title:"$route和$router的区别",slug:"route和-router的区别",children:[]}]}]},{level:2,title:"5.路由的原理",slug:"_5-路由的原理",children:[{level:4,title:"abstract模式:",slug:"abstract模式",children:[]},{level:4,title:"hash模式",slug:"hash模式",children:[{level:5,title:"实现:",slug:"实现",children:[]}]},{level:4,title:"history模式",slug:"history模式",children:[{level:5,title:"实现:",slug:"实现-1",children:[]}]}]},{level:2,title:"6.-属性",slug:"_6-属性",children:[{level:3,title:"router",slug:"router",children:[]},{level:3,title:"route",slug:"route",children:[]}]},{level:2,title:"7.router-link的props属性",slug:"_7-router-link的props属性",children:[{level:4,title:"1.to",slug:"_1-to",children:[]},{level:4,title:"2.replace",slug:"_2-replace",children:[]},{level:4,title:"3. append",slug:"_3-append",children:[]},{level:4,title:"4. tag",slug:"_4-tag",children:[]},{level:4,title:"5.active-class",slug:"_5-active-class",children:[]},{level:4,title:"6.exact",slug:"_6-exact",children:[]},{level:4,title:"7.events",slug:"_7-events",children:[]},{level:4,title:'8、将"激活时的css类名"应用在外层元素',slug:"_8、将-激活时的css类名-应用在外层元素",children:[]}]},{level:2,title:"8.写法",slug:"_8-写法",children:[]},{level:2,title:"9.路由登陆判断",slug:"_9-路由登陆判断",children:[]},{level:2,title:"10.路由跳转打开新页面方法",slug:"_10-路由跳转打开新页面方法",children:[]}],filePathRelative:"study/10.Vue/VUE-Router.md",git:{updatedTime:1648783284e3}}},795:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var p=a(6252),t=a(7306);const e=(0,p.uE)('<h1 id="vue-router-路由" tabindex="-1"><a class="header-anchor" href="#vue-router-路由" aria-hidden="true">#</a> VUE-Router 路由</h1><p>官方地址:https://router.vuejs.org/zh/guide/#html</p><p>安装:npm install --save vue-router</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>总结<span class="token operator">:</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//进行编程式路由跳转</span>\n<span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;/login&quot;</span><span class="token operator">&gt;</span> <span class="token comment">//中的to属性进行路由切换</span>\n<span class="token operator">&lt;</span>router<span class="token operator">-</span>view <span class="token operator">/</span><span class="token operator">&gt;</span>  用于展示\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params 获取路由传递参数\n<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query\t获取路由传递参数\n<span class="token number">5.</span>params和query都是传递参数区别在于params不会再url上显示出现，\nquery则是我们通常看到的url后面跟上的？后跟的显示参数\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 路由重复点击异常处理</span>\n<span class="token keyword">const</span> originalPush <span class="token operator">=</span> <span class="token class-name">Router</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push\n<span class="token class-name">Router</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">location</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">originalPush</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> location<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> err<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="vue-router路由" tabindex="-1"><a class="header-anchor" href="#vue-router路由" aria-hidden="true">#</a> vue-router路由</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Vue<span class="token operator">-</span>Router 是vue官方的路由管理器。\n通过路由地址的变换展现不同的页面<span class="token punctuation">;</span>\n路由导航有两种<span class="token operator">:</span>\n\t声明式导航<span class="token operator">:</span>router<span class="token operator">-</span>link\n    编程式导航<span class="token operator">:</span>router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>path<span class="token operator">:</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">)</span>\n\n通过<span class="token operator">:</span>router<span class="token operator">-</span>view标签作为 页面展示区<span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_1-组件导航创建" tabindex="-1"><a class="header-anchor" href="#_1-组件导航创建" aria-hidden="true">#</a> 1.组件导航创建</h2><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello App!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 使用 router-link 组件来导航. --&gt;</span>\n    <span class="token comment">&lt;!-- 通过传入 `to` 属性指定链接. --&gt;</span>\n    <span class="token comment">&lt;!-- &lt;router-link&gt; 默认会被渲染成一个 `&lt;a&gt;` 标签 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/foo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go to Foo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/bar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Go to Bar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token comment">&lt;!-- 路由出口 --&gt;</span>\n  <span class="token comment">&lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. 定义 (路由) 组件。</span>\n<span class="token comment">// 可以从其他文件 import 进来</span>\n<span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span> template<span class="token operator">:</span> <span class="token string">&#39;&lt;div&gt;foo&lt;/div&gt;&#39;</span> <span class="token punctuation">}</span>\n<span class="token keyword">const</span> Bar <span class="token operator">=</span> <span class="token punctuation">{</span> template<span class="token operator">:</span> <span class="token string">&#39;&lt;div&gt;bar&lt;/div&gt;&#39;</span> <span class="token punctuation">}</span>\n\n<span class="token comment">// 2. 定义路由</span>\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/foo&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> Foo <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/bar&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> Bar <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token comment">// 3. 创建 router 实例，然后传 `routes` 配置</span>\n<span class="token comment">// 你还可以传别的配置参数, 不过先这么简单着吧。</span>\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  routes <span class="token comment">// (缩写) 相当于 routes: routes</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 4. 创建和挂载根实例。</span>\n<span class="token comment">// 记得要通过 router 配置参数注入路由，</span>\n<span class="token comment">// 从而让整个应用都有路由功能</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  router\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 带/则会当做根路径  不带/则会一直嵌套路径</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>独文件写法</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">router/index.js</span><span class="token template-punctuation string">`</span></span>\n\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>\n\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/foo&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> Foo <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/bar&#39;</span><span class="token punctuation">,</span> component<span class="token operator">:</span> Bar <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  routes <span class="token comment">// (缩写) 相当于 routes: routes</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token punctuation">}</span>\n\nexprot defalute router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">main.js</span><span class="token template-punctuation string">`</span></span>\n\n<span class="token keyword">import</span> router <span class="token keyword">from</span>  <span class="token string">&#39;./router/index.js&#39;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    router<span class="token punctuation">,</span>\n    store\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_2-传参方式" tabindex="-1"><a class="header-anchor" href="#_2-传参方式" aria-hidden="true">#</a> 2.传参方式</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>一、\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/news&#39;</span><span class="token punctuation">,</span> query<span class="token operator">:</span> <span class="token punctuation">{</span> userId<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n接收方式<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>userId<span class="token punctuation">}</span><span class="token punctuation">}</span>\n\n二、\n<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;news&#39;</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token punctuation">{</span> userId<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n接受方式<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>userId<span class="token punctuation">}</span><span class="token punctuation">}</span>\n\n三、 \n\t传参<span class="token operator">:</span>\nrouter<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>path<span class="token operator">:</span> <span class="token string">&#39;/foo/&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;aaaa&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>path<span class="token operator">:</span> <span class="token string">&#39;/foo/:id&#39;</span><span class="token punctuation">,</span>component<span class="token operator">:</span> Foo<span class="token punctuation">}</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>path<span class="token operator">:</span> <span class="token string">&#39;/foo/:id/:name&#39;</span><span class="token punctuation">,</span>component<span class="token operator">:</span> Foo<span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token comment">//多个参数</span>\n\t接收<span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token comment">//输出aaaa</span>\n\t接受：<span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span>params\n\n四、prop解耦传参<span class="token punctuation">;</span>\n    routes<span class="token operator">:</span><span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n        path<span class="token operator">:</span><span class="token string">&#39;login/:id&#39;</span><span class="token punctuation">,</span>\n        props<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span>login\n        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n        path<span class="token operator">:</span><span class="token string">&#39;login/:id&#39;</span><span class="token punctuation">,</span>\n        props<span class="token operator">:</span><span class="token punctuation">{</span>\n        \tid<span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span>\n            age<span class="token operator">:</span><span class="token number">6</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        component<span class="token operator">:</span>login \n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n\t接收方式<span class="token operator">:</span>\n    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>\n        props<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n五、指定固定参数\n\t<span class="token punctuation">{</span>\n        path<span class="token operator">:</span><span class="token string">&#39;login/:id&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">props</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">route</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            id<span class="token operator">:</span>route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>a<span class="token punctuation">,</span>\n            age<span class="token operator">:</span>route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>b\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        component<span class="token operator">:</span>login\n     <span class="token punctuation">}</span>\n地址<span class="token operator">:</span>localhost<span class="token operator">:</span><span class="token number">8080</span><span class="token operator">/</span>home<span class="token operator">/</span><span class="token operator">?</span>a<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>b<span class="token operator">=</span><span class="token number">2</span>\n <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n        name<span class="token operator">:</span><span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>\n        props<span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>b<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><blockquote><p>总结</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>总结：\n<span class="token number">1.</span>params传递参数，需要使用name进行路由跳转，否则无法传递。\n<span class="token number">2.</span>params传递参数刷新会丢失数据，<span class="token operator">/</span>router<span class="token operator">/</span><span class="token operator">:</span>id方式上的id除外\n<span class="token number">3.</span>query显示拼接在url上，刷新不丢失，不是必须有，router<span class="token operator">/</span><span class="token operator">:</span>id方式则必须有id参数，否则无法正确进入视图。\n<span class="token number">4.</span>props也可以传递参数，但传递的只能是静态参数。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></blockquote><h2 id="_3-children-子路由" tabindex="-1"><a class="header-anchor" href="#_3-children-子路由" aria-hidden="true">#</a> 3.children-子路由</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>子路由\nroutes<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span>\n\tpath<span class="token operator">:</span><span class="token string">&#39;/index&#39;</span><span class="token punctuation">,</span>\n\tcomponent<span class="token operator">:</span>template1<span class="token punctuation">,</span>\n\tname<span class="token operator">:</span><span class="token string">&#39;templatel&#39;</span><span class="token punctuation">,</span>\n\tchildren<span class="token operator">:</span><span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          \tpath<span class="token operator">:</span><span class="token string">&#39;son&#39;</span><span class="token punctuation">,</span>\n\t\t\tcomponent<span class="token operator">:</span><span class="token string">&#39;son&#39;</span>\n        <span class="token punctuation">}</span>，\n        <span class="token punctuation">{</span>\n        \tpath：<span class="token string">&quot;/son&quot;</span><span class="token punctuation">,</span>\n        \tcomponent<span class="token operator">:</span><span class="token string">&#39;xxx&#39;</span>\n        <span class="token punctuation">}</span>\n\t<span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span>\n\n子路由带‘<span class="token operator">/</span>’与不带‘<span class="token operator">/</span>’区别：\n带‘<span class="token operator">/</span>’：路由会解析为 baseUrl<span class="token operator">/</span>son；\n不带’<span class="token operator">/</span>‘：路由会解析为：baseUrl<span class="token operator">/</span>index<span class="token operator">/</span>son\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_4-导航守卫" tabindex="-1"><a class="header-anchor" href="#_4-导航守卫" aria-hidden="true">#</a> 4.导航守卫</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>导航守卫主要用来通过跳转或取消的方式守卫导航\n全局的<span class="token punctuation">,</span> 单个路由独享的<span class="token punctuation">,</span> 或者组件级的。\n\n全局路由<span class="token operator">:</span>\nrouter<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...去到每个路由之前执行</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//放行</span>\n    \n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nrouter<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span><span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    当进到某个路由后触发的\n<span class="token punctuation">}</span> <span class="token punctuation">)</span>\n\n\n组件内的导航  \n<span class="token function">beforeRouteLeave</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="全局守卫" tabindex="-1"><a class="header-anchor" href="#全局守卫" aria-hidden="true">#</a> 全局守卫</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>全局前置守卫\nrouter<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n全局解析守卫\nrouter<span class="token punctuation">.</span>beforeResolve\n\n全局后置钩子\nrouter<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="路由独享守卫" tabindex="-1"><a class="header-anchor" href="#路由独享守卫" aria-hidden="true">#</a> 路由独享守卫</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  routes<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token string">&#39;/foo&#39;</span><span class="token punctuation">,</span>\n      component<span class="token operator">:</span> Foo<span class="token punctuation">,</span>\n      <span class="token function-variable function">beforeEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// ...</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="组件内守卫" tabindex="-1"><a class="header-anchor" href="#组件内守卫" aria-hidden="true">#</a> 组件内守卫</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n  template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">...</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token function">beforeRouteEnter</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 在渲染该组件的对应路由被 confirm 前调用</span>\n    <span class="token comment">// 不！能！获取组件实例 `this`</span>\n    <span class="token comment">// 因为当守卫执行前，组件实例还没被创建</span>\n       <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">vm</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 通过 `vm` 访问组件实例</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \n    \n  <span class="token function">beforeRouteUpdate</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 在当前路由改变，但是该组件被复用时调用</span>\n    <span class="token comment">// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，</span>\n    <span class="token comment">// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span>\n    <span class="token comment">// 可以访问组件实例 `this`</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \n    \n<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">这个离开守卫通常用来禁止用户在还未保存修改前突然离开。该导航可以通过 next(false) 来取消。</span><span class="token template-punctuation string">`</span></span>\n    \n  <span class="token function">beforeRouteLeave</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 导航离开该组件的对应路由时调用</span>\n    <span class="token comment">// 可以访问组件实例 `this`</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="路由解析流程" tabindex="-1"><a class="header-anchor" href="#路由解析流程" aria-hidden="true">#</a> 路由解析流程</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1</span>、导航被触发\n<span class="token number">2</span>、在失活的组件里调用离开守卫 beforeRouterleave\n<span class="token number">3</span>、调用全局的 beforeEach 守卫\n<span class="token number">4</span>、在重用的组件里调用 beforeRouteUpdate 守卫\n<span class="token number">5</span>、在路由配置里调用 beforEnter <span class="token comment">//路由独享</span>\n<span class="token number">6</span>、解析异步路由组件\n<span class="token number">7</span>、在被激活的组件里调用 beforeRouteEnter\n<span class="token number">8</span>、调用全局的 beforeResolve 守卫\n<span class="token number">9</span>、导航被确认\n<span class="token number">10</span>、调用全局的 afterEach 钩子\n<span class="token number">11</span>、触发 <span class="token constant">DOM</span> 更新\n<span class="token number">12</span>、在创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><img src="'+t+'" alt="img"></p><h4 id="全局守卫-1" tabindex="-1"><a class="header-anchor" href="#全局守卫-1" aria-hidden="true">#</a> 全局守卫</h4><ul><li><p>router.beforeEach 全局前置守卫</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>to: Route:</code>即将要进入的目标 路由对象</p><p><code>from: Route:</code> 当前导航正要离开的路由</p><p>next: Function:<code>一定要调用该方法来</code>resolve<code>这个钩子。执行效果</code>依赖 next 方法的调用参数。</p></li><li><p>router.beforeResolve 全局解析守卫</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>在导航被确认之前，同时在所有组件内守卫和异步路由组件被解析之后，解析守卫就被调用。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>router. afterEach 全局后置钩子</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>不会接受 next 函数也不会改变导航本身：\nrouter<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><p>​</p><h4 id="路由独享守卫-1" tabindex="-1"><a class="header-anchor" href="#路由独享守卫-1" aria-hidden="true">#</a> 路由独享守卫</h4><ul><li>beforeEnter</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  routes<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token string">&#39;/foo&#39;</span><span class="token punctuation">,</span>\n      component<span class="token operator">:</span> Foo<span class="token punctuation">,</span>\n      <span class="token function-variable function">beforeEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// ...</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="组件内守卫-1" tabindex="-1"><a class="header-anchor" href="#组件内守卫-1" aria-hidden="true">#</a> 组件内守卫</h4><ul><li>beforeRouteEnter 不能获取组件实例this;next(vm=&gt;{可获取实例})</li><li>beforeRouteUpdate</li><li>beforeRouteLeave</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n  template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">...</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n  <span class="token function">beforeRouteEnter</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 在渲染该组件的对应路由被 confirm 前调用</span>\n    <span class="token comment">// 不！能！获取组件实例 `this`</span>\n    <span class="token comment">// 因为当守卫执行前，组件实例还没被创建</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">//不过，你可以通过传一个回调给 next来访问组件实例。</span>\n  <span class="token comment">//在导航被确认的时候执行回调，并且把组件实例作为回调方法的参数。</span>\n  <span class="token function">beforeRouteEnter</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">vm</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 通过 `vm` 访问组件实例</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">beforeRouteUpdate</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 在当前路由改变，但是该组件被复用时调用</span>\n    <span class="token comment">// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，</span>\n    <span class="token comment">// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span>\n    <span class="token comment">// 可以访问组件实例 `this`</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \n    <span class="token comment">//  该组件离开跳转到另外的组件时触发该钩子,常应用于用户表单，当用户填了一部分内容，需要提醒用户是否离开页面</span>\n <span class="token function">beforeRouteLeave</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token function">beforeRouteLeave</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 导航离开该组件的对应路由时调用</span>\n    <span class="token comment">// 可以访问组件实例 `this`</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="vue-router是如何响应-路由参数变化的" tabindex="-1"><a class="header-anchor" href="#vue-router是如何响应-路由参数变化的" aria-hidden="true">#</a> vue-router是如何响应 路由参数变化的:</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>weixin_41639609<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">88721627</span> \nwatch<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&#39;$route&#39;</span> <span class="token punctuation">(</span>to<span class="token punctuation">,</span> from<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 对路由变化作出响应...</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token function">beforeRouteUpdate</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// react to route changes...</span>\n    <span class="token comment">// don&#39;t forget to call next()</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="route和-router的区别" tabindex="-1"><a class="header-anchor" href="#route和-router的区别" aria-hidden="true">#</a> $route和$router的区别</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>答：$route是“路由信息对象”，包括path，params，hash，query，fullPath，matched，name等路由信息参数。而$router是“路由实例”对象包括了路由的跳转方法，钩子函数等。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_5-路由的原理" tabindex="-1"><a class="header-anchor" href="#_5-路由的原理" aria-hidden="true">#</a> 5.路由的原理</h2><h4 id="abstract模式" tabindex="-1"><a class="header-anchor" href="#abstract模式" aria-hidden="true">#</a> abstract模式:</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>服务器端和Node<span class="token punctuation">.</span>js<span class="token punctuation">.</span> 如果没有浏览器<span class="token constant">API</span>，路由器将自动强制进入此模式\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="hash模式" tabindex="-1"><a class="header-anchor" href="#hash模式" aria-hidden="true">#</a> hash模式</h4><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>1.就是指 url 尾巴后的 # 号以及后面的字符, \n\t请求的时候不会被包含在 http 请求中 只会携带#之前的，\n\t所以每次改变hash不会重新请求加载页面\n2.hash 改变会触发 hashchange 事件\n3.hash变化会被浏览器记录，浏览器的前进和后退都能用。\n3.能兼容到ie8\n\n监听事件:hashchange事件\n\nhttps://developer.mozilla.org/zh-CN/docs/Web/API/Location\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h5 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现:</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Router</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>routes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>currentUrl <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">route</span><span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">[</span>path<span class="token punctuation">]</span> <span class="token operator">=</span> callback <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">updateView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>currentUrl <span class="token operator">=</span> location<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentUrl<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentUrl<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;load&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateView</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;hashchange&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateView</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#/<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>about<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#/topics<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>topics<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/router.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  router<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  router<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  router<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;About&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  router<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;/topics&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;Topics&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="history模式" tabindex="-1"><a class="header-anchor" href="#history模式" aria-hidden="true">#</a> history模式</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1.</span>页面请求时会带上整个链接，所以后台需要做相对处理，不然返回<span class="token number">404</span>\n<span class="token number">2.</span>不带#号<span class="token punctuation">,</span>请求时是整个链接<span class="token punctuation">,</span>所以需要服务器的支持把所有路由都重定向到根页面\n<span class="token number">3.</span>怕刷新<span class="token punctuation">,</span>刷新请求<span class="token punctuation">,</span>需要服务端配合<span class="token punctuation">;</span>\n\n以下会触发popstate<span class="token operator">:</span>\n<span class="token number">1.</span>点击浏览器的前进或后退按钮\n<span class="token number">2.</span>点击 a 标签\n<span class="token number">3.</span>在 <span class="token constant">JS</span> 代码中触发 history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>replace<span class="token punctuation">)</span>State 函数\n\n\n监听事件<span class="token operator">:</span>popstate\n\nhistory<span class="token punctuation">.</span><span class="token function">pushState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span> \n\t<span class="token number">1.</span>pushState url变化<span class="token punctuation">,</span>页面不会刷新<span class="token punctuation">;</span>只有back<span class="token punctuation">,</span>forward<span class="token punctuation">,</span>go会<span class="token punctuation">;</span>\n\t<span class="token number">2.</span>遵守同源策略<span class="token punctuation">;</span>\nhistory<span class="token punctuation">.</span><span class="token function">replaceState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nhistory<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nhistory<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nhistory<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h5 id="实现-1" tabindex="-1"><a class="header-anchor" href="#实现-1" aria-hidden="true">#</a> 实现:</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Router</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>routes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>currentUrl <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">route</span><span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">[</span>path<span class="token punctuation">]</span> <span class="token operator">=</span> callback <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">updateView</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>currentUrl <span class="token operator">=</span> url<span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentUrl<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>routes<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentUrl<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">bindLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> allLink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;a[data-href]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> allLink<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> current <span class="token operator">=</span> allLink<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      current<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>\n        <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span>\n        <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">const</span> url <span class="token operator">=</span> current<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          history<span class="token punctuation">.</span><span class="token function">pushState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateView</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token boolean">false</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">bindLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;popstate&#39;</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateView</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;load&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateView</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">data-href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">data-href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>about<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">data-href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/topics<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>topics<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/router.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  router<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  router<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  router<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;/about&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;About&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  router<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&#39;/topics&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;Topics&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="_6-属性" tabindex="-1"><a class="header-anchor" href="#_6-属性" aria-hidden="true">#</a> 6.-属性</h2><h3 id="router" tabindex="-1"><a class="header-anchor" href="#router" aria-hidden="true">#</a> router</h3><ul><li>route为当前路由对象</li><li>router为VueRouter的实例</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1.</span>$router<span class="token punctuation">.</span>path   <span class="token comment">//当前路由的路径</span>\n<span class="token number">2.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//</span>\n<span class="token number">3.</span>$router<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span> <span class="token comment">//</span>\n<span class="token number">4.</span>$router<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//</span>\n<span class="token number">5.</span>$router<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">,</span>append<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n  location<span class="token operator">:</span> Location<span class="token punctuation">;</span>\n  route<span class="token operator">:</span> Route<span class="token punctuation">;</span>\n  href<span class="token operator">:</span> string<span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>loction<span class="token punctuation">,</span>current<span class="token operator">?</span><span class="token punctuation">,</span>append<span class="token operator">?</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>解决$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">)</span>不能打开新页面\n<span class="token keyword">let</span> routeData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/reportpreview&#39;</span><span class="token punctuation">,</span> query<span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> id <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nwindow<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>routeData<span class="token punctuation">.</span>href<span class="token punctuation">,</span> <span class="token string">&#39;_blank&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="route" tabindex="-1"><a class="header-anchor" href="#route" aria-hidden="true">#</a> route</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">1.</span>$route<span class="token punctuation">.</span>params  <span class="token comment">//参数对象 动态片段和全匹配片段的键值对</span>\n<span class="token number">2.</span>$route<span class="token punctuation">.</span>query   <span class="token comment">//路由中参数的键值对</span>\n<span class="token number">3.</span>$route<span class="token punctuation">.</span>matched <span class="token comment">//当前匹配的路径中所包含的所有片段所对应的配置参数对象</span>\n<span class="token number">4.</span>$route<span class="token punctuation">.</span>name    <span class="token comment">//路径的名字，如果没有使用具名路径</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_7-router-link的props属性" tabindex="-1"><a class="header-anchor" href="#_7-router-link的props属性" aria-hidden="true">#</a> 7.router-link的props属性</h2><h4 id="_1-to" tabindex="-1"><a class="header-anchor" href="#_1-to" aria-hidden="true">#</a> 1.to</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>router<span class="token operator">-</span>link <span class="token operator">:</span>to<span class="token operator">=</span><span class="token string">&quot;‘home‘&quot;</span><span class="token operator">&gt;</span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n\n<span class="token operator">&lt;</span>router<span class="token operator">-</span>link <span class="token operator">:</span>to<span class="token operator">=</span><span class="token string">&quot;{ path: ‘home‘ }&quot;</span><span class="token operator">&gt;</span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n\n<span class="token comment">//命名路由</span>\n<span class="token operator">&lt;</span>router<span class="token operator">-</span>link <span class="token operator">:</span>to<span class="token operator">=</span><span class="token string">&quot;{ name: ‘user‘, params: {userId: 123} }&quot;</span><span class="token operator">&gt;</span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n\n<span class="token comment">//带查询参数，下面的结果为/register?plan=private--&gt;</span>\n<span class="token operator">&lt;</span>router<span class="token operator">-</span>link <span class="token operator">:</span>to<span class="token operator">=</span><span class="token string">&quot;{ path: ‘register‘, query: {plan: ‘private‘}}&quot;</span><span class="token operator">&gt;</span>Register<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="_2-replace" tabindex="-1"><a class="header-anchor" href="#_2-replace" aria-hidden="true">#</a> 2.replace</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>router<span class="token operator">-</span>link <span class="token operator">:</span>to<span class="token operator">=</span><span class="token string">&quot;{path: ‘/abc‘}&quot;</span> replace<span class="token operator">&gt;</span><span class="token constant">ABC</span><span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n\n会调用roter<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_3-append" tabindex="-1"><a class="header-anchor" href="#_3-append" aria-hidden="true">#</a> 3. append</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;b&quot;</span> append<span class="token operator">&gt;</span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n\n设置append属性后，则在当前路径前添加基路径；\n如：当前路由为<span class="token operator">/</span>index；则如上为<span class="token operator">/</span>index<span class="token operator">/</span>b\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_4-tag" tabindex="-1"><a class="header-anchor" href="#_4-tag" aria-hidden="true">#</a> 4. tag</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;/foo&quot;</span> tag<span class="token operator">=</span><span class="token string">&quot;li&quot;</span><span class="token operator">&gt;</span><span class="token constant">FOO</span><span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n<span class="token comment">// 渲染结果 </span>\n<span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token constant">FOO</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n\n指定<span class="token operator">&lt;</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>渲染成某标签；\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_5-active-class" tabindex="-1"><a class="header-anchor" href="#_5-active-class" aria-hidden="true">#</a> 5.active-class</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> New <span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n   linkActiveClass<span class="token operator">:</span> ‘active‘ \n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n设置链接激活时使用的css类名。默认值可以通过路由的构造选项linkActiveClass来全局配置<span class="token punctuation">,</span> 默认值为 ‘router<span class="token operator">-</span>link<span class="token operator">-</span>active‘\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_6-exact" tabindex="-1"><a class="header-anchor" href="#_6-exact" aria-hidden="true">#</a> 6.exact</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;是否激活&quot;</span>，默认是<span class="token boolean">false</span> 。举个粟子，如果当前的路径是<span class="token operator">/</span>a 开头的，那么<span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;/a&quot;</span><span class="token operator">&gt;</span> 也会被设置css类名\n\n　　按照这个规则，<span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token operator">&gt;</span> 将会点亮各个路由！想要链接使用<span class="token string">&quot;exact匹配模式&quot;</span>，则使用exact属性：\n  \n<span class="token comment">// 这个链接只会在地址为 / 的时候被激活 </span>\n<span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;/&quot;</span> exact<span class="token operator">&gt;</span>Home<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n\n<span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;/user&quot;</span><span class="token operator">&gt;</span><span class="token constant">USER</span><span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n\n<span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">&quot;/user/userinfo&quot;</span><span class="token operator">&gt;</span><span class="token constant">USER</span><span class="token operator">-</span>info<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n\n<span class="token comment">// 如果不设置exact，则当路由到了/user/userinfo 页面时，USER也是被设置了router-link-active样式的！</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="_7-events" tabindex="-1"><a class="header-anchor" href="#_7-events" aria-hidden="true">#</a> 7.events</h4><p>声明可以用来触发导航的事件（默认是‘click‘）。可以是一个字符串或者是一个包含字符串的数组</p><h4 id="_8、将-激活时的css类名-应用在外层元素" tabindex="-1"><a class="header-anchor" href="#_8、将-激活时的css类名-应用在外层元素" aria-hidden="true">#</a> 8、将&quot;激活时的css类名&quot;应用在外层元素</h4><p>有时候我们要让&quot;激活的css类名&quot;应用在外层元素，而不是&lt;a&gt;标签本身，那么可以用&lt;router-link&gt;渲染外层元素，包裹着内层的原生&lt;a&gt;标签</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>router<span class="token operator">-</span>link tag<span class="token operator">=</span><span class="token string">&quot;li&quot;</span> to<span class="token operator">=</span><span class="token string">&quot;/foo&quot;</span><span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>a\\<span class="token operator">&gt;</span><span class="token operator">/</span>foo<span class="token operator">&lt;</span><span class="token operator">/</span>a\\<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n<span class="token comment">//在这种情况下，&lt;a\\&gt;将作为真实的链接（能获取到正确的href的），而&quot;激活时的css类名&quot;则设置到外层的&lt;li\\&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_8-写法" tabindex="-1"><a class="header-anchor" href="#_8-写法" aria-hidden="true">#</a> 8.写法</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>正常写法<span class="token operator">:</span>\n\n<span class="token keyword">import</span> login <span class="token keyword">from</span> <span class="token string">&#39;@/views/login&#39;</span>\n<span class="token punctuation">{</span>\n    path<span class="token operator">:</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span>login\n   \tname<span class="token operator">:</span>login\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n写法二<span class="token operator">:</span>\n<span class="token keyword">const</span> <span class="token function-variable function">login</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./login&#39;</span><span class="token punctuation">)</span>  <span class="token comment">//异步加载</span>\n<span class="token punctuation">{</span>\n    path<span class="token operator">:</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span>login\n   \tname<span class="token operator">:</span>login\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n写法三<span class="token operator">:</span>\n<span class="token punctuation">{</span>\n    path<span class="token operator">:</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">component</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//异步加载</span>\n   \tname<span class="token operator">:</span>login\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="_9-路由登陆判断" tabindex="-1"><a class="header-anchor" href="#_9-路由登陆判断" aria-hidden="true">#</a> 9.路由登陆判断</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>routes<span class="token operator">:</span>\n<span class="token punctuation">[</span>\n   <span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token string">&#39;/cinema&#39;</span><span class="token punctuation">,</span>\n      redirect<span class="token operator">:</span> <span class="token string">&#39;/page/cinema&#39;</span><span class="token punctuation">,</span>\n      component<span class="token operator">:</span> BlankLayout<span class="token punctuation">,</span>\n      meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;影院&#39;</span> <span class="token punctuation">,</span> requiresAuth<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span>\n      children<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          path<span class="token operator">:</span> <span class="token string">&#39;/cinema/plan&#39;</span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">&#39;cinemaPlan&#39;</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./views/cinema/Plan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;影院排期&#39;</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n          path<span class="token operator">:</span> <span class="token string">&#39;/cinema/cinemaDetail&#39;</span><span class="token punctuation">,</span>\n          name<span class="token operator">:</span> <span class="token string">&#39;cinemaDetail&#39;</span><span class="token punctuation">,</span>\n          <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./views/cinema/CinemaDetail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          meta<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;影院详情&#39;</span> <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n       <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>引入\nimport Vue from  &#39;vue&#39;\nimport VueRouter from &#39;vue-router&#39;\nVue.use(VueRouter)\n\nconst router  = new VueRouter({ routes })\n\nexport router\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>to<span class="token punctuation">.</span>meta <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">setDocumentTitle</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>matched<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">record</span> <span class="token operator">=&gt;</span> record<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>requiresAuth<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// this route requires auth, check if logged in</span>\n    <span class="token comment">// if not, redirect to login page.</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>store<span class="token punctuation">.</span>getters<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n        query<span class="token operator">:</span> <span class="token punctuation">{</span> redirect<span class="token operator">:</span> to<span class="token punctuation">.</span>fullPath <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>query<span class="token punctuation">.</span>siteCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>from<span class="token punctuation">.</span>query<span class="token punctuation">.</span>siteCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span>\n        query<span class="token punctuation">.</span>siteCode <span class="token operator">=</span> from<span class="token punctuation">.</span>query<span class="token punctuation">.</span>siteCode\n        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          path<span class="token operator">:</span> to<span class="token punctuation">.</span>path<span class="token punctuation">,</span>\n          query<span class="token operator">:</span> query\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 确保一定要调用 next()</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n　<span class="token punctuation">}</span>\n<span class="token number">2.</span>主要说明下为什么要使用遍历to<span class="token punctuation">.</span>matched数组判断meta的requiresAuth字段，而不直接使用to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>requiresAuth来判断，首先例子当中给的是cinema<span class="token punctuation">,</span>也即是<span class="token number">1</span>级路由设置了requiresAuth<span class="token punctuation">.</span>而cinemaPlan没有设置。假设两种情况：\n\n　前提：vue路由匹配时会同时匹配满足情况的所有路由，即如果路由是‘<span class="token operator">/</span>cinema<span class="token operator">/</span>plan’的话，‘<span class="token operator">/</span>cinema’也会触发。另外如果较高等级的路由需要登录控制的话，它所有的嵌套路由都是基本需要登录控制的。\n\n（<span class="token number">1</span>）cinema具有登录控制，而cinemaPlan 没有。如果用户正常点击路由跳转的话，它必然是先进一级路由，再去二级路由，一级路由实现登录控制，利用to<span class="token punctuation">.</span>meta是能够满足的，注意这里是用户正常点击，但是假如有用户直接改变url地址的话去访问cinemaPlan的话，则需要给cinemaPlan路由添加requiresAuth字段，同理也需要给cinemaDetail添加字段，如果路由比较多的话，就会很麻烦。\n\n（<span class="token number">2</span>）cinema没有登录控制，而cinemaPlan有。这种情况确实不怕用户直接改变url访问二级路由了，但是同样如果过多二级路由，也是需要设置许多requiresAuth。\n\n   所以，为了方便，直接遍历to<span class="token punctuation">.</span>matched数组，该数组中保存着匹配到的所有路由信息。就该例而言，访问cinema时，matched数组长度为<span class="token number">1</span>，访问cinemaPlan时，matched数组长度为<span class="token number">2</span>，即保存着‘<span class="token operator">/</span>cinema’以及‘<span class="token operator">/</span>cinema<span class="token operator">/</span>plan’。其实啰嗦了这么多，直接使用to<span class="token punctuation">.</span>meta判断字段也可以，就是需要给所有需要控制的路由添加requiresAuth。而to<span class="token punctuation">.</span>matched则只需要给较高一级的路由添加requiresAuth即可，其下的所有子路由不必添加。\n\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><blockquote><p>some()</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>to<span class="token punctuation">.</span>matched<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">record</span> <span class="token operator">=&gt;</span> record<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>requiresAuth<span class="token punctuation">)</span>\n<span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 方法用于检测数组中的元素是否满足指定条件（函数提供）\n<span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 方法会依次执行数组的每个元素\n\n<span class="token function">some</span><span class="token punctuation">(</span> <span class="token punctuation">)</span> 不会对空数组进行检测。\n<span class="token function">some</span><span class="token punctuation">(</span> <span class="token punctuation">)</span> 不会改变原始数组。\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></blockquote><h2 id="_10-路由跳转打开新页面方法" tabindex="-1"><a class="header-anchor" href="#_10-路由跳转打开新页面方法" aria-hidden="true">#</a> 10.路由跳转打开新页面方法</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>方法<span class="token number">1</span>\n<span class="token operator">&lt;</span>router<span class="token operator">-</span>link target<span class="token operator">=</span><span class="token string">&quot;_blank&quot;</span> <span class="token operator">:</span>to<span class="token operator">=</span><span class="token string">&quot;{path:&#39;/home&#39;,query:{id:&#39;1&#39;}}&quot;</span><span class="token operator">&gt;</span>新页面打开home页<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">&gt;</span>\n\n方法<span class="token number">2</span><span class="token operator">:</span>\n <span class="token keyword">let</span> routeUrl <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n     path<span class="token operator">:</span> <span class="token string">&quot;/share&quot;</span><span class="token punctuation">,</span>\n     query<span class="token operator">:</span> <span class="token punctuation">{</span>id<span class="token operator">:</span><span class="token number">96</span><span class="token punctuation">}</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n   window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>routeUrl<span class="token punctuation">.</span>href<span class="token punctuation">,</span> <span class="token string">&#39;_blank&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h1 id="路由-生命周期-动画钩子-顺序" tabindex="-1"><a class="header-anchor" href="#路由-生命周期-动画钩子-顺序" aria-hidden="true">#</a> 路由 生命周期 动画钩子 顺序</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>进入首页的钩子们\n\n    <span class="token number">1</span> 路由钩子 路由跳转前beforeEach\n\n    <span class="token number">2</span> 路由钩子 home组件内部：守卫执行前beforeRouteEnter\n\n    <span class="token number">3.</span>路由钩子 路由跳转后afterEach\n\n    <span class="token number">4</span> 生命周期 home beforeCreate 创建前状态\n\n    <span class="token number">5</span> 生命周期 home created 创建完毕状态\n\n    <span class="token number">6</span> 生命周期 home beforeMount 挂载前状态\n\n    <span class="token number">7</span> 动画钩子 beforeEnter\n\n    <span class="token number">8</span> 生命周期 home mounted 挂载结束状态\n\n    <span class="token number">9</span> 动画钩子 enter\n\n    <span class="token number">10</span> 动画钩子 afterEnter\n\n\n离开首页，进入别的页面 other\n\n    <span class="token number">1</span> 路由钩子 home 导航离开该组件beforeRouteLeave\n\n    <span class="token number">2</span> 路由钩子 路由跳转前beforeEach\n\n    <span class="token number">3</span> 路由钩子 other组件内部：守卫执行前beforeRouteEnter\n\n    <span class="token number">4.</span>路由钩子 路由跳转后afterEach\n\n    <span class="token number">5</span> 生命周期 other beforeCreate 创建前状态\n\n    <span class="token number">6</span> 生命周期 other created 创建完毕状态\n\n    <span class="token number">7</span> 生命周期 other beforeMount 挂载前状态\n\n    <span class="token number">8</span> 动画钩子 beforeEnter \n    <span class="token number">9</span> 动画钩子 beforeLeave\n\n    <span class="token number">10</span> 动画钩子 leave\n\n    <span class="token number">11</span> 动画钩子 afterLeave\n\n    <span class="token number">12</span> 生命周期 home beforeDestroy 销毁前状态\n\n    <span class="token number">13</span> 生命周期 home destroyed 销毁完成状态\n\n    <span class="token number">14</span> 生命周期 other mounted 挂载结束状态\n\n    <span class="token number">15</span> 动画钩子 enter\n\n    <span class="token number">16</span> 动画钩子 afterEnter\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br></div></div>',92),o={},c=(0,a(3744).Z)(o,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}},7306:(n,s,a)=>{n.exports=a.p+"assets/img/20190616165857285-1574860714128.a6c5bb12.png"}}]);