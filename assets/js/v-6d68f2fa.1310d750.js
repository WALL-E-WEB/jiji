"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5017],{2163:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-6d68f2fa",path:"/study/10.Vue/VUE-axios.html",title:"VUE-Axios",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"axios与ajax",slug:"axios与ajax",children:[]},{level:3,title:"axiso引用方式",slug:"axiso引用方式",children:[{level:4,title:"1.绑定原型方式:",slug:"_1-绑定原型方式",children:[]},{level:4,title:"2.插件方法",slug:"_2-插件方法",children:[]},{level:4,title:"3.接口封装方式",slug:"_3-接口封装方式",children:[]},{level:4,title:"4.多基地址",slug:"_4-多基地址",children:[]}]},{level:3,title:"axios全局配置",slug:"axios全局配置",children:[]},{level:3,title:"axios传参方式",slug:"axios传参方式",children:[{level:4,title:"1.get请求",slug:"_1-get请求",children:[]},{level:4,title:"2.post请求",slug:"_2-post请求",children:[]},{level:4,title:"3. query 形式",slug:"_3-query-形式",children:[]},{level:4,title:"4. JSON格式",slug:"_4-json格式",children:[]},{level:4,title:"5.对象写法",slug:"_5-对象写法",children:[]}]},{level:3,title:"axios拦截器",slug:"axios拦截器",children:[{level:4,title:"1.请求拦截",slug:"_1-请求拦截",children:[]},{level:4,title:"2.响应拦截",slug:"_2-响应拦截",children:[]}]},{level:3,title:"create方法",slug:"create方法",children:[]},{level:3,title:"post请求方式",slug:"post请求方式",children:[{level:4,title:"multipart/form-data",slug:"multipart-form-data",children:[]}]},{level:3,title:"get",slug:"get",children:[]},{level:3,title:"请求转换",slug:"请求转换",children:[]},{level:3,title:"qs",slug:"qs",children:[]},{level:3,title:"拦截处理",slug:"拦截处理",children:[]}],filePathRelative:"study/10.Vue/VUE-axios.md",git:{updatedTime:1648783284e3}}},154:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var p=a(6252),t=a(8837);const e=(0,p.uE)('<h1 id="vue-axios" tabindex="-1"><a class="header-anchor" href="#vue-axios" aria-hidden="true">#</a> VUE-Axios</h1><blockquote><p>官方网址: http://www.axios-js.com/zh-cn/docs/</p><p>安装: npm install --save axios vue-axios</p><p>vue专注于网路请求的一个轻量库,没有dom的功能操作<br> 需要导包<br> 使用箭头函数,this指向vue</p><p>https://www.cnblogs.com/chaoyuehedy/p/9931146.html</p></blockquote><h3 id="axios与ajax" tabindex="-1"><a class="header-anchor" href="#axios与ajax" aria-hidden="true">#</a> axios与ajax</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios 对原生<span class="token constant">XHR</span>的封装<span class="token punctuation">,</span>是一个基于 Promise 的http请求库，可以用在浏览器和node<span class="token punctuation">.</span>js中<span class="token punctuation">.</span>\n<span class="token number">1.</span>从 node<span class="token punctuation">.</span>js 创建 http 请求\n<span class="token number">2.</span>支持 Promise <span class="token constant">API</span>\n<span class="token number">3.</span>自动转换 <span class="token constant">JSON</span> 数据\n<span class="token number">3.</span>客户端支持防止<span class="token constant">CSRF</span>\n<span class="token number">4.</span>提供了一些并发请求的接口\n\n这个支持防止<span class="token constant">CSRF</span>其实挺好玩的，是怎么做到的呢，就是让你的每个请求都带一个从cookie中拿到的key<span class="token punctuation">,</span> 根据浏览器同源策略，假冒的网站是拿不到你cookie中得key的，这样，后台就可以轻松辨别出这个请求是否是用户在假冒网站上的误导输入，从而采取正确的策略。\n\nAxios既提供了并发的封装，也没有下文会提到的fetch的各种问题，而且体积也较小，当之无愧现在最应该选用的请求的方式。\n\najax：\n本身是针对<span class="token constant">MVC</span>的编程<span class="token punctuation">,</span>不符合现在前端<span class="token constant">MVVM</span>的浪潮\n基于原生的<span class="token constant">XHR</span>开发，<span class="token constant">XHR</span>本身的架构不清晰，已经有了fetch的替代方案\nJQuery整个项目太大，单纯使用ajax却要引入整个JQuery非常的不合理（采取个性化打包的方案又不能享受<span class="token constant">CDN</span>服务\n\naxios：\n从 node<span class="token punctuation">.</span>js 创建 http 请求\n支持 Promise <span class="token constant">API</span>\n客户端支持防止<span class="token constant">CSRF</span>\n提供了一些并发请求的接口（重要，方便了很多的操作）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n    headers<span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">//设置请求头</span>\n        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Bearer $(res.token)</span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    params<span class="token operator">:</span><span class="token punctuation">{</span><span class="token comment">//geturl不传参,可在此写参</span>\n         page<span class="token operator">:</span>page<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">backdata</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n\t\n   \n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\naxios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n\tkey<span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token comment">//post请求参数</span>\n\tinfo<span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token comment">//post请求参数</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">backdata</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n    \n修改axios获取的返回数据\naxios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>transformResponse<span class="token operator">=</span><span class="token punctuation">[</span>\n    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">try</span><span class="token punctuation">{</span>\n           <span class="token keyword">return</span> JSONbig<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> data<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token keyword">finally</span><span class="token punctuation">{</span>\n            不管有没有错都会执行这个  \n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n    \n<span class="token function-variable function">多并发</span><span class="token operator">:</span>\n    \n<span class="token keyword">function</span> <span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user/12345&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n \n<span class="token keyword">function</span> <span class="token function">getUserPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user/12345/permissions&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\naxios<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getUserPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>axios<span class="token punctuation">.</span><span class="token function">spread</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">acct<span class="token punctuation">,</span> perms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 两个请求现在都执行完成</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h3 id="axiso引用方式" tabindex="-1"><a class="header-anchor" href="#axiso引用方式" aria-hidden="true">#</a> axiso引用方式</h3><h4 id="_1-绑定原型方式" tabindex="-1"><a class="header-anchor" href="#_1-绑定原型方式" aria-hidden="true">#</a> 1.绑定原型方式:</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios是一个库，并不是vue中的第三方插件，使用时不能通过Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">)</span>安装插件，需要在原型上进行绑定：\n安装<span class="token operator">:</span>npm install <span class="token operator">--</span>save axios\n\nmian<span class="token punctuation">.</span>js文件中<span class="token operator">:</span>\n\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> axios from ‘axios’\n<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$http <span class="token operator">=</span> axios <span class="token comment">//用法:axios</span>\n<span class="token comment">//或 Vue.prototype.$axios = axios//用法:this.$axios</span>\n\n用法<span class="token operator">:</span>\naxios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;url?id=123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\naxios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n\tparms<span class="token operator">:</span><span class="token punctuation">{</span>\n\t\tid<span class="token operator">:</span><span class="token number">123456</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h4 id="_2-插件方法" tabindex="-1"><a class="header-anchor" href="#_2-插件方法" aria-hidden="true">#</a> 2.插件方法</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>vue<span class="token operator">-</span>axios是将axios集成到Vue<span class="token punctuation">.</span>js的小包装器，可以像插件一样进行安装\n安装<span class="token operator">:</span>npm install <span class="token operator">--</span>save axios vue<span class="token operator">-</span>axios  \n\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>\n<span class="token keyword">import</span> VueAxios <span class="token keyword">from</span> <span class="token string">&#39;vue-axios&#39;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueAxios<span class="token punctuation">,</span> axios<span class="token punctuation">)</span>\n\n用法<span class="token operator">:</span>\nVue<span class="token punctuation">.</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">respose</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="_3-接口封装方式" tabindex="-1"><a class="header-anchor" href="#_3-接口封装方式" aria-hidden="true">#</a> 3.接口封装方式</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> http <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    baseURL<span class="token operator">:</span><span class="token string">&#39;http://ttapi.research.itcast.cn&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token number">1.</span>接口方式<span class="token operator">:</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">login</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/app/v1_0/authorizations&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token number">2.</span>接口类型方式<span class="token operator">:</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">postRequests</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>\n            url<span class="token operator">:</span> url<span class="token punctuation">,</span>\n            data<span class="token operator">:</span> params<span class="token punctuation">,</span>\n            headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  <span class="token string">&#39;Authorization&#39;</span><span class="token operator">:</span> <span class="token function">getStore</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n                  <span class="token string">&#39;schoolCode&#39;</span><span class="token operator">:</span> <span class="token function">getStore</span><span class="token punctuation">(</span><span class="token string">&#39;schoolCode&#39;</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n\t引入<span class="token operator">:</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>postRequests<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./api&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">postFind</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n   <span class="token keyword">return</span> <span class="token function">postRequests</span><span class="token punctuation">(</span><span class="token string">&#39;/travelPlanWeb&#39;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;&gt;&gt;</span><span class="token operator">&gt;&gt;&gt;</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>\n<span class="token keyword">var</span> baseUrl <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n<span class="token comment">// var version = &#39;1.0.1&#39;</span>\n<span class="token comment">// 环境判断</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// baseUrl = &#39;http://192.168.8.32:8082/&#39;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  baseUrl <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  baseUrl <span class="token operator">=</span> <span class="token string">&#39;prodction&#39;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// http://localhost:9010/department/querySubDepar</span>\n<span class="token keyword">let</span> axi <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  baseUrl<span class="token operator">:</span> baseUrl<span class="token punctuation">,</span>\n  timeOut<span class="token operator">:</span> <span class="token number">8000</span><span class="token punctuation">,</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json; charset=UTF-8&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">var</span> <span class="token function-variable function">getData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> axi<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    params<span class="token punctuation">.</span>success <span class="token operator">&amp;&amp;</span> params<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    params<span class="token punctuation">.</span>fail <span class="token operator">&amp;&amp;</span> params<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">let</span> <span class="token function-variable function">postData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">refs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 判断是否有数据 转换为表单数据</span>\n  <span class="token keyword">var</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>refs<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> refs<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> refs<span class="token punctuation">.</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    refs<span class="token punctuation">.</span>data <span class="token operator">=</span> formData\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token function">axi</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>\n    url<span class="token operator">:</span> refs<span class="token punctuation">.</span>url<span class="token punctuation">,</span>\n    data<span class="token operator">:</span> refs<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\n    headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token string">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json; charset=UTF-8&#39;</span>\n        <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    refs<span class="token punctuation">.</span>success <span class="token operator">&amp;&amp;</span> refs<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    refs<span class="token punctuation">.</span>fail <span class="token operator">&amp;&amp;</span> refs<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span>postData<span class="token punctuation">,</span> getData<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h4 id="_4-多基地址" tabindex="-1"><a class="header-anchor" href="#_4-多基地址" aria-hidden="true">#</a> 4.多基地址</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>\n\n<span class="token keyword">let</span> http <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    baseURL<span class="token operator">:</span><span class="token string">&#39;基地址&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> axiosA <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\tbaseURL<span class="token operator">:</span><span class="token string">&quot;http://www.a.cn&quot;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> axiosb <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\tbaseURL<span class="token operator">:</span><span class="token string">&quot;http://www.b.cn&quot;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n\n\n调用<span class="token operator">:</span>按名导入\n<span class="token keyword">import</span> <span class="token punctuation">{</span> axiosA <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;地址&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>创一个文件<span class="token operator">:</span>utils<span class="token operator">&gt;</span>http<span class="token operator">&gt;</span>index<span class="token punctuation">.</span>js\n<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">js</span><span class="token template-punctuation string">`</span></span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> http <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    baseURL<span class="token operator">:</span><span class="token string">&#39;http://ttapi.research.itcast.cn&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n接口方式<span class="token operator">:</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">login</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/app/v1_0/authorizations&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">vue</span><span class="token template-punctuation string">`</span></span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> login <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;diz&#39;</span>\n<span class="token keyword">async</span> <span class="token function">loging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">login</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="axios全局配置" tabindex="-1"><a class="header-anchor" href="#axios全局配置" aria-hidden="true">#</a> axios全局配置</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">15000</span><span class="token punctuation">;</span>  <span class="token comment">//超时响应</span>\naxios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>post<span class="token punctuation">[</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 配置请求头（推荐）</span>\n<span class="token comment">// axios.defaults.headers.post[&#39;Content-Type&#39;] = &#39;application/json;charset=utf-8&#39;; // 配置请求头</span>\naxios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> $core<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//确认协议和地址</span>\naxios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>withCredentials <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>   <span class="token comment">// axios 默认不发送cookie，需要全局设置true发送cooki</span>\naxios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">&#39;Authorization&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">AUTH_TOKEN</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="axios传参方式" tabindex="-1"><a class="header-anchor" href="#axios传参方式" aria-hidden="true">#</a> axios传参方式</h3><h4 id="_1-get请求" tabindex="-1"><a class="header-anchor" href="#_1-get请求" aria-hidden="true">#</a> 1.get请求</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user?id=12345&amp;name=user&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>\naxios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token comment">//params参数必写 , 如果没有参数传{}也可以</span>\n    params<span class="token operator">:</span> <span class="token punctuation">{</span>  \n       id<span class="token operator">:</span> <span class="token number">12345</span>，\n       name<span class="token operator">:</span> user\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>\n如有需写路径参数 url<span class="token operator">/</span><span class="token operator">:</span>target     <span class="token comment">//用 `url${}`,url拼接</span>\nbody<span class="token operator">:</span> 需对象传<span class="token punctuation">,</span><span class="token keyword">get</span>需params<span class="token punctuation">;</span>post只需<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token punctuation">{</span>\n\tparams<span class="token operator">:</span><span class="token punctuation">{</span>\n\t\t参数\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n    headers<span class="token operator">:</span><span class="token punctuation">{</span>请求头<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h4 id="_2-post请求" tabindex="-1"><a class="header-anchor" href="#_2-post请求" aria-hidden="true">#</a> 2.post请求</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>post<span class="token operator">/</span>put<span class="token operator">/</span>patch请求\n传参格式为 formData \n （全局请求头<span class="token operator">:</span><span class="token string">&#39;Content-Type&#39;</span><span class="token operator">=</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>）\n\n（request的Header<span class="token operator">:</span><span class="token string">&#39;Content-Type&#39;</span><span class="token operator">=</span> <span class="token string">&#39;multipart/form-data&#39;</span>）\nar formData<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nformData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span><span class="token number">123456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nformData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;pass&#39;</span><span class="token punctuation">,</span><span class="token number">12345678</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n \naxios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/notice&quot;</span><span class="token punctuation">,</span>formData<span class="token punctuation">)</span>\n     <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> res<span class="token punctuation">}</span><span class="token punctuation">)</span>\n     <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> err<span class="token punctuation">}</span>\n\n<span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span><span class="token punctuation">{</span>\n\t参数\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>\n    headers<span class="token operator">:</span><span class="token punctuation">{</span>请求头<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_3-query-形式" tabindex="-1"><a class="header-anchor" href="#_3-query-形式" aria-hidden="true">#</a> 3. query 形式</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>传参格式为 query 形式\n（全局请求头<span class="token operator">:</span><span class="token string">&#39;Content-Type&#39;</span><span class="token operator">=</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>）\n\n（request的Header<span class="token operator">:</span><span class="token string">&#39;Content-Type&#39;</span><span class="token operator">=</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>）\n\n\n<span class="token keyword">import</span> Qs <span class="token keyword">from</span> <span class="token string">&#39;qs&#39;</span>   <span class="token comment">//引入方式</span>\n<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$qs <span class="token operator">=</span> Qs  <span class="token comment">//全局加载</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//使用方式</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$qs<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//使用方式</span>\n \n<span class="token keyword">var</span> readyData<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>$qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span><span class="token number">1234</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span>user\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\naxios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/notice&quot;</span><span class="token punctuation">,</span>readyData<span class="token punctuation">)</span>\n     <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> res<span class="token punctuation">}</span><span class="token punctuation">)</span>\n     <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> err<span class="token punctuation">}</span><span class="token punctuation">)</span>\n————————————————\n使用URLSearchParams\n<span class="token keyword">var</span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nparams<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;param1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nparams<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;param2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\naxios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/foo&#39;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="_4-json格式" tabindex="-1"><a class="header-anchor" href="#_4-json格式" aria-hidden="true">#</a> 4. JSON格式</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>传参格式为 <span class="token function">raw</span> <span class="token punctuation">(</span><span class="token constant">JSON</span>格式<span class="token punctuation">)</span>\n（全局请求头<span class="token operator">:</span><span class="token string">&#39;Content-Type&#39;</span><span class="token operator">=</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>）\n\n（request的Header<span class="token operator">:</span><span class="token string">&#39;Content-Type&#39;</span><span class="token operator">=</span> <span class="token string">&#39;application/json;charset=UTF-8&#39;</span>）\n<span class="token operator">--</span><span class="token operator">-</span>\n<span class="token keyword">var</span> readyData<span class="token operator">=</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span><span class="token number">1234</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span>user\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\naxios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/notice&quot;</span><span class="token punctuation">,</span>readyData<span class="token punctuation">)</span>\n     <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> res<span class="token punctuation">}</span><span class="token punctuation">)</span>\n     <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> err<span class="token punctuation">}</span><span class="token punctuation">)</span>\n     <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>\n<span class="token keyword">var</span> readyData<span class="token operator">=</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    id<span class="token operator">:</span><span class="token number">1234</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span>user\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\naxios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/notice&quot;</span><span class="token punctuation">,</span>readyData<span class="token punctuation">)</span>\n     <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> res<span class="token punctuation">}</span><span class="token punctuation">)</span>\n     <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> err<span class="token punctuation">}</span><span class="token punctuation">)</span>\n————————————————\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="_5-对象写法" tabindex="-1"><a class="header-anchor" href="#_5-对象写法" aria-hidden="true">#</a> 5.对象写法</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\turl<span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n\tmethod<span class="token operator">:</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>\n\tparams<span class="token operator">:</span><span class="token punctuation">{</span> num<span class="token operator">=</span><span class="token number">3</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\n<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\turl<span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n\tmethod<span class="token operator">:</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>\n\tdata<span class="token operator">:</span><span class="token punctuation">{</span> num<span class="token operator">=</span><span class="token number">3</span> <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="axios拦截器" tabindex="-1"><a class="header-anchor" href="#axios拦截器" aria-hidden="true">#</a> axios拦截器</h3><h4 id="_1-请求拦截" tabindex="-1"><a class="header-anchor" href="#_1-请求拦截" aria-hidden="true">#</a> 1.请求拦截</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>config保存请求时的所有数据<span class="token punctuation">,</span>查看请求报文\n\naxios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token comment">//发送请求头</span>\n    <span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;userInfo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Authorization<span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>user<span class="token punctuation">.</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n    <span class="token keyword">return</span> config\n<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><img src="'+t+'" alt="1568688836118"></p><h4 id="_2-响应拦截" tabindex="-1"><a class="header-anchor" href="#_2-响应拦截" aria-hidden="true">#</a> 2.响应拦截</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 添加响应拦截器</span>\naxios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 对响应数据做点什么</span>\n    <span class="token keyword">return</span> response<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    \n    <span class="token comment">//执行上一个报错的请求</span>\n     <span class="token keyword">return</span> <span class="token function">http</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>config<span class="token punctuation">)</span>\n    \n    <span class="token comment">// 对响应错误做点什么</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n自定义响应体\n响应设置bigint\n\naxios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>transformResponse <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n <span class="token keyword">try</span><span class="token punctuation">{</span>\n     <span class="token keyword">return</span> JSONbig<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>\n <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">{</span>\n     <span class="token keyword">return</span> data\n <span class="token punctuation">}</span>   \n<span class="token punctuation">}</span><span class="token punctuation">]</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="create方法" tabindex="-1"><a class="header-anchor" href="#create方法" aria-hidden="true">#</a> create方法</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  baseURL<span class="token operator">:</span> <span class="token string">&#39;https://some-domain.com/api/&#39;</span><span class="token punctuation">,</span>\n  timeout<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token comment">//超时响应时间</span>\n  headers<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string">&#39;X-Custom-Header&#39;</span><span class="token operator">:</span> <span class="token string">&#39;foobar&#39;</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="post请求方式" tabindex="-1"><a class="header-anchor" href="#post请求方式" aria-hidden="true">#</a> post请求方式</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>data 与 pramas 区别\ndata<span class="token operator">:</span>请求体<span class="token punctuation">;</span>\npramas<span class="token operator">:</span>拼接到请求地址\n\n\n文件上传<span class="token operator">:</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">uploadFileRequest</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>\n    url<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>base<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    data<span class="token operator">:</span> params<span class="token punctuation">,</span>\n    headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;multipart/form-data&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token comment">// 转换</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">postRequest</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>\n    url<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>base<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    data<span class="token operator">:</span> params<span class="token punctuation">,</span>\n    transformRequest<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> it <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        ret <span class="token operator">+=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;=&#39;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>it<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;&amp;&#39;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> ret\n    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    headers<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h4 id="multipart-form-data" tabindex="-1"><a class="header-anchor" href="#multipart-form-data" aria-hidden="true">#</a> multipart/form-data</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;multipart/form-data&#39;</span> \n\t\t<span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;multipartFile&quot;</span><span class="token punctuation">,</span> Blob<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Blob为 文件内容</span>\n      <span class="token function">GETVoiceToSrc</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> qs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;qs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\naxios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    params<span class="token operator">:</span><span class="token punctuation">{</span>\n        arr<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">paramsSerializer</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token punctuation">{</span>arrayFormat<span class="token operator">:</span> <span class="token string">&#39;repeat&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="请求转换" tabindex="-1"><a class="header-anchor" href="#请求转换" aria-hidden="true">#</a> 请求转换</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>\n<span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">&#39;qs&#39;</span>\n\n<span class="token comment">//get传递数组</span>\naxios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    params<span class="token operator">:</span> <span class="token punctuation">{</span>\n     id<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n     type<span class="token operator">:</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">paramsSerializer</span><span class="token operator">:</span> <span class="token parameter">params</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token punctuation">{</span> indices<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">//url?id=1&amp;id=2&amp;id=3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>\n    params<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 请求地址方式</span>\n     id<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n     type<span class="token operator">:</span> <span class="token number">1</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> indices<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="qs" tabindex="-1"><a class="header-anchor" href="#qs" aria-hidden="true">#</a> qs</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> indices<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n <span class="token comment">//形式： id=1&amp;id=2&amp;id=3</span>\nqs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>arrayFormat<span class="token operator">:</span> ‘indices‘<span class="token punctuation">}</span><span class="token punctuation">)</span>\n <span class="token comment">//形式： ids[0]=1&amp;ids[1]=2&amp;ids[2]=3</span>\nqs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>arrayFormat<span class="token operator">:</span> ‘brackets‘<span class="token punctuation">}</span><span class="token punctuation">)</span>\n <span class="token comment">//形式：id[]=1&amp;id[]=2&amp;id[]=3</span>\nqs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>ids<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>arrayFormat<span class="token operator">:</span> ‘repeat‘<span class="token punctuation">}</span><span class="token punctuation">)</span> \n<span class="token comment">//形式： id=1&amp;id=2&amp;id=3</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="拦截处理" tabindex="-1"><a class="header-anchor" href="#拦截处理" aria-hidden="true">#</a> 拦截处理</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * 封装\n * 请求拦截、响应拦截、错误统一处理\n */</span>\n<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>\n<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&#39;../router/index&#39;</span>\n<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;../store/index&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Message <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-ui&#39;</span>\n\n<span class="token doc-comment comment">/**\n * 跳转登录页\n * 携带当前页面路由，以期在登录页面完成登录后返回当前页面\n */</span>\n<span class="token keyword">let</span> <span class="token function-variable function">toLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span>\n    router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>\n        query<span class="token operator">:</span> <span class="token punctuation">{</span>\n            redirect<span class="token operator">:</span> router<span class="token punctuation">.</span>currentRoute<span class="token punctuation">.</span>fullPath\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token comment">// 创建axios实例</span>\n<span class="token keyword">let</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    timeout<span class="token operator">:</span> <span class="token number">30000</span><span class="token comment">//请求超时时间</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 请求拦截器\n * 每次请求前，如果存在token则在请求头中携带token\n */</span>\ninstance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>\n    <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 登录流程控制中，根据本地是否存在token判断用户的登录情况</span>\n        <span class="token comment">// 但是即使token存在，也有可能token是过期的，所以在每次的请求头中携带token</span>\n        <span class="token comment">// 后台根据携带的token判断用户的登录情况，并返回给我们对应的状态码</span>\n        <span class="token comment">// 而后我们可以在响应拦截器中，根据状态码进行一些统一的操作。</span>\n        <span class="token comment">//设置统一请求头</span>\n\n        <span class="token comment">//token</span>\n        <span class="token keyword">let</span> phSessionToken <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            phSessionToken <span class="token operator">=</span> localStorage<span class="token punctuation">.</span>token\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            phSessionToken <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">//设置请求头</span>\n        config<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>\n            <span class="token string">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>\n            <span class="token string">&#39;phSessionToken&#39;</span><span class="token operator">:</span> phSessionToken\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> config\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token parameter">error</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n\n<span class="token doc-comment comment">/**\n * 请求失败后的错误统一处理\n * param <span class="token punctuation">{</span>Number<span class="token punctuation">}</span> status 请求失败的状态码\n */</span>\n\n<span class="token comment">//后台沟通状态码规范</span>\n<span class="token keyword">let</span> <span class="token function-variable function">errorHandle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status<span class="token punctuation">,</span> other</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">//状态码判断</span>\n    <span class="token keyword">switch</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//400: 客户端请求的语法错误，服务器无法理解</span>\n        <span class="token keyword">case</span> <span class="token number">400</span><span class="token operator">:</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;400客户端请求的语法错误，服务器无法理解&#39;</span><span class="token punctuation">)</span>\n            <span class="token keyword">break</span>\n        <span class="token keyword">case</span> <span class="token number">401</span><span class="token operator">:</span>\n            <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;登录过期，请重新登录&#39;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;error&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token function">toLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//跳转到登录</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>\n            <span class="token keyword">break</span>\n        <span class="token comment">//404请求不存在</span>\n        <span class="token keyword">case</span> <span class="token number">404</span><span class="token operator">:</span>\n            <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;请求的资源不存在&#39;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;error&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token keyword">break</span>\n        <span class="token keyword">case</span> <span class="token number">408</span><span class="token operator">:</span>\n            <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;网络延时，请稍后&#39;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;error&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token function">toLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//跳转到登录</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">30000</span><span class="token punctuation">)</span>\n            <span class="token keyword">break</span>\n        <span class="token comment">//500</span>\n        <span class="token keyword">case</span> <span class="token number">500</span><span class="token operator">:</span>\n            <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;网络异常，请重新登录&#39;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;error&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token function">toLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//跳转到登录</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">30000</span><span class="token punctuation">)</span>\n            <span class="token keyword">break</span>\n        <span class="token keyword">default</span><span class="token operator">:</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>other<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">//响应拦截器</span>\ninstance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>\n    <span class="token comment">//请求成功</span>\n    <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//Promise.resolve(value)方法返回一个以给定值解析后的Promise 对象。</span>\n            <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;响应拦截器失败&quot;</span><span class="token punctuation">)</span>\n            <span class="token comment">//Promise.reject(reason)方法返回一个带有拒绝原因reason参数的Promise对象。</span>\n            <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">//请求失败</span>\n    <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">//return Promise.reject(error)</span>\n        <span class="token keyword">const</span> <span class="token punctuation">{</span> response <span class="token punctuation">}</span> <span class="token operator">=</span> error\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//请求已发出，但是不在2xx的范围    ------错误处理、token过期等</span>\n            <span class="token function">errorHandle</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status<span class="token punctuation">,</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>\n            <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                message<span class="token operator">:</span> <span class="token string">&#39;网络异常，即将前往登录页&#39;</span><span class="token punctuation">,</span>\n                type<span class="token operator">:</span> <span class="token string">&#39;error&#39;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                <span class="token comment">//跳转到登录</span>\n                <span class="token function">toLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span>\n            <span class="token comment">// 处理断网的情况</span>\n            <span class="token comment">// eg:请求超时或断网时，更新state的network状态</span>\n            <span class="token comment">// network状态在app.vue中控制着一个全局的断网提示组件的显示隐藏</span>\n            <span class="token comment">// 关于断网组件中的刷新重新获取数据，会在断网组件中说明</span>\n            <span class="token comment">//store.commit(&#39;changeNetwork&#39;, false)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> instance\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br></div></div>',50),o={},c=(0,a(3744).Z)(o,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}},8837:(n,s,a)=>{n.exports=a.p+"assets/img/1568688836118.009d78c8.png"}}]);