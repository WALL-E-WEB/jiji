"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[255],{62:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-4cf3835c",path:"/study/19.Flutter/flutter_routes.html",title:"flutter 路由",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"普通路由与传参",slug:"普通路由与传参",children:[]},{level:2,title:"命名路由与传参",slug:"命名路由与传参",children:[]},{level:2,title:"Navigator Api",slug:"navigator-api",children:[{level:3,title:"of",slug:"of",children:[]},{level:3,title:"push",slug:"push",children:[]},{level:3,title:"pushNamed",slug:"pushnamed",children:[]},{level:3,title:"pushAndRemoveUntil",slug:"pushandremoveuntil",children:[]},{level:3,title:"pushNamedAndRemoveUntil",slug:"pushnamedandremoveuntil",children:[]}]},{level:2,title:"MaterialApp中的路由配置",slug:"materialapp中的路由配置",children:[{level:3,title:"MaterialApp",slug:"materialapp",children:[]},{level:3,title:"home",slug:"home",children:[]},{level:3,title:"initialRoute",slug:"initialroute",children:[]},{level:3,title:"routes",slug:"routes",children:[]},{level:3,title:"",slug:"",children:[]},{level:3,title:"navigatorKey",slug:"navigatorkey",children:[]},{level:3,title:"onGenerateRoute",slug:"ongenerateroute",children:[{level:4,title:"navigatorObservers",slug:"navigatorobservers",children:[]},{level:4,title:"onGenerateTitle",slug:"ongeneratetitle",children:[]},{level:4,title:"onUnknownRoute",slug:"onunknownroute",children:[]}]}]},{level:2,title:"Navigator 2.0",slug:"navigator-2-0",children:[]}],filePathRelative:"study/19.Flutter/flutter_routes.md",git:{updatedTime:1664298039e3}}},1858:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="flutter-路由" tabindex="-1"><a class="header-anchor" href="#flutter-路由" aria-hidden="true">#</a> flutter 路由</h1><h2 id="普通路由与传参" tabindex="-1"><a class="header-anchor" href="#普通路由与传参" aria-hidden="true">#</a> 普通路由与传参</h2><h2 id="命名路由与传参" tabindex="-1"><a class="header-anchor" href="#命名路由与传参" aria-hidden="true">#</a> 命名路由与传参</h2><ol><li>MaterialApp routes 注册命名路由；</li><li>Navigator.pushNamed(context, &#39;路由名&#39; , arguments:参数) 进行路由跳转与传参；</li><li>ModalRoute.of(context)!.settings.arguments 获取参数；</li><li>Navigator.pop(context, 参数) 关闭页面并向上一页面传参；</li><li>Navigator.pushNamed 中通过await 或 .then 接收关闭页面返回的参数；</li></ol><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">/// main.dart</span>\n\n<span class="token keyword">import</span> <span class="token string">&#39;package:stufl/page/home.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:stufl/page/login.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token class-name">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">super</span><span class="token punctuation">.</span>key<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">MaterialApp</span><span class="token punctuation">(</span>\n      title<span class="token punctuation">:</span> <span class="token string">&#39;Flutter Demo&#39;</span><span class="token punctuation">,</span>\n      theme<span class="token punctuation">:</span> <span class="token class-name">ThemeData</span><span class="token punctuation">(</span>primarySwatch<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      initialRoute<span class="token punctuation">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span> \t\t<span class="token comment">/// 初始路径</span>\n      routes<span class="token punctuation">:</span> <span class="token punctuation">{</span> \t\t\t\t\t\t\t\t\t<span class="token comment">/// 命名路由声明</span>\n        <span class="token string">&#39;/login&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">const</span> <span class="token class-name">LoginPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token string">&#39;/home&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">HomePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code> <span class="token comment">/// 返回的是Future类，可以使用await 或 .then 接收返回的参数</span>\n<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>\n              context<span class="token punctuation">,</span>\n              <span class="token string">&#39;/home&#39;</span><span class="token punctuation">,</span> \t\t\t\t\t\t\t<span class="token comment">/// 路由路径</span>\n              arguments<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">/// 路由参数</span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2022</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">/// home.dart</span>\n<span class="token keyword">final</span> arg <span class="token operator">=</span> <span class="token class-name">ModalRoute</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span>settings<span class="token punctuation">.</span>arguments <span class="token operator">as</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> num<span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token number">2022</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="navigator-api" tabindex="-1"><a class="header-anchor" href="#navigator-api" aria-hidden="true">#</a> Navigator Api</h2><h3 id="of" tabindex="-1"><a class="header-anchor" href="#of" aria-hidden="true">#</a> of</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span><span class="token string">&#39;/home&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/// NavigatorState</span>\n\n\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&#39;/home&#39;</span><span class="token punctuation">)</span> \n  \n <span class="token comment">/// pushNamed 源码</span>\n <span class="token keyword">static</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> pushNamed<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Object</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>\n    <span class="token class-name">BuildContext</span> context<span class="token punctuation">,</span>\n    <span class="token class-name">String</span> routeName<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Object</span><span class="token operator">?</span> arguments<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>pushNamed<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>routeName<span class="token punctuation">,</span> arguments<span class="token punctuation">:</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="push" tabindex="-1"><a class="header-anchor" href="#push" aria-hidden="true">#</a> push</h3><h3 id="pushnamed" tabindex="-1"><a class="header-anchor" href="#pushnamed" aria-hidden="true">#</a> pushNamed</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">/// 进入下一个页面</span>\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span>push<span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>\n    context<span class="token punctuation">,</span>\n     <span class="token class-name">MaterialPageRoute</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>\n       builder<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">const</span> <span class="token class-name">MyPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n     <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">pushNamed</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">&#39;/home&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="pushandremoveuntil" tabindex="-1"><a class="header-anchor" href="#pushandremoveuntil" aria-hidden="true">#</a> pushAndRemoveUntil</h3><h3 id="pushnamedandremoveuntil" tabindex="-1"><a class="header-anchor" href="#pushnamedandremoveuntil" aria-hidden="true">#</a> pushNamedAndRemoveUntil</h3><p>将给定路由推送到Navigator，删除先前的路由，直到该函数的参数predicate返回true为止。</p><ol><li>从栈顶开始删除页面直到predicate=true；</li><li>再将给定的新路由入栈；</li></ol><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code> <span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamedAndRemoveUntil</span><span class="token punctuation">(</span>\n              <span class="token string">&#39;/detail&#39;</span><span class="token punctuation">,</span>\n   <span class="token comment">/// typedef RoutePredicate = bool Function(Route&lt;dynamic&gt; route);</span>\n              <span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">/// false 将前面页面全部删除，Navigator.popUntil </span>\n              arguments<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/// 页面栈：/home 》/A 》/B 执行后：/home 》/C</span>\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamedAndRemoveUntil</span><span class="token punctuation">(</span>\n              <span class="token string">&#39;/C&#39;</span><span class="token punctuation">,</span>\n              <span class="token punctuation">(</span>route<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> route<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">&#39;/home&#39;</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              arguments<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/// 与上同</span>\n<span class="token class-name">Navigator</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pushNamedAndRemoveUntil</span><span class="token punctuation">(</span>\n              <span class="token string">&#39;/D&#39;</span><span class="token punctuation">,</span>\n              <span class="token class-name">ModalRoute</span><span class="token punctuation">.</span><span class="token function">withName</span><span class="token punctuation">(</span><span class="token string">&#39;/home&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              arguments<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>pushReplacement 路由替换。</p><p>pushReplacementNamed 这个也是替换路由操作。推送一个命名路由到Navigator，新路由完成动画之后处理上一个路由。</p><p>replace 将Navigator中的路由替换成一个新路由。</p><p>replaceRouteBelow 将Navigator中的路由替换成一个新路由，要替换的路由是是传入参数anchorRouter里面的路由。</p><p>pop 导航到新页面，或者返回到上个页面。</p><p>canPop 判断是否可以导航到新页面</p><p>maybePop 可能会导航到新页面</p><p>popAndPushNamed 指定一个路由路径，并导航到新页面。</p><p>popUntil 反复执行pop 直到该函数的参数predicate返回true为止。</p><p>removeRoute 从Navigator中删除路由，同时执行Route.dispose操作。</p><p>removeRouteBelow 从Navigator中删除路由，同时执行Route.dispose操作，要替换的路由是传入参数anchorRouter里面的路由。</p><h2 id="materialapp中的路由配置" tabindex="-1"><a class="header-anchor" href="#materialapp中的路由配置" aria-hidden="true">#</a> MaterialApp中的路由配置</h2><h3 id="materialapp" tabindex="-1"><a class="header-anchor" href="#materialapp" aria-hidden="true">#</a> MaterialApp</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="home" tabindex="-1"><a class="header-anchor" href="#home" aria-hidden="true">#</a> home</h3><h3 id="initialroute" tabindex="-1"><a class="header-anchor" href="#initialroute" aria-hidden="true">#</a> initialRoute</h3><h3 id="routes" tabindex="-1"><a class="header-anchor" href="#routes" aria-hidden="true">#</a> routes</h3><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><h3 id="navigatorkey" tabindex="-1"><a class="header-anchor" href="#navigatorkey" aria-hidden="true">#</a> navigatorKey</h3><h3 id="ongenerateroute" tabindex="-1"><a class="header-anchor" href="#ongenerateroute" aria-hidden="true">#</a> onGenerateRoute</h3><h4 id="navigatorobservers" tabindex="-1"><a class="header-anchor" href="#navigatorobservers" aria-hidden="true">#</a> navigatorObservers</h4><h4 id="ongeneratetitle" tabindex="-1"><a class="header-anchor" href="#ongeneratetitle" aria-hidden="true">#</a> onGenerateTitle</h4><h4 id="onunknownroute" tabindex="-1"><a class="header-anchor" href="#onunknownroute" aria-hidden="true">#</a> onUnknownRoute</h4><h2 id="navigator-2-0" tabindex="-1"><a class="header-anchor" href="#navigator-2-0" aria-hidden="true">#</a> Navigator 2.0</h2><p>https://www.raywenderlich.com/19457817-flutter-navigator-2-0-and-deep-links#toc-anchor-001</p><p>https://flutter.cn/community/tutorials</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/cupertino.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:flutter/foundation.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:stufl/page/home.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:stufl/page/login.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token string">&#39;page/detail.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">runApp</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token class-name">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token keyword">extends</span> <span class="token class-name">StatelessWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token class-name">MyApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">super</span><span class="token punctuation">.</span>key<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">MaterialApp</span><span class="token punctuation">.</span><span class="token function">router</span><span class="token punctuation">(</span>\n      title<span class="token punctuation">:</span> <span class="token string">&#39;Flutter Demo&#39;</span><span class="token punctuation">,</span>\n      theme<span class="token punctuation">:</span> <span class="token class-name">ThemeData</span><span class="token punctuation">(</span>\n        primarySwatch<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span>\n        visualDensity<span class="token punctuation">:</span> <span class="token class-name">VisualDensity</span><span class="token punctuation">.</span>adaptivePlatformDensity<span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      routeInformationParser<span class="token punctuation">:</span> <span class="token class-name">MyRouteParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      routerDelegate<span class="token punctuation">:</span> <span class="token class-name">MyRouteDelegate</span><span class="token punctuation">(</span>\n        onGenerateRoute<span class="token punctuation">:</span> <span class="token punctuation">(</span>settings<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>\n            settings<span class="token punctuation">:</span> settings<span class="token punctuation">,</span>\n            builder<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              <span class="token keyword">return</span> <span class="token keyword">const</span> <span class="token class-name">HomePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyRouteDelegate</span> <span class="token keyword">extends</span> <span class="token class-name">RouterDelegate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>\n    <span class="token keyword">with</span> <span class="token class-name">PopNavigatorRouterDelegateMixin</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">ChangeNotifier</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> _stack <span class="token operator">=</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">static</span> <span class="token class-name">MyRouteDelegate</span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">final</span> delegate <span class="token operator">=</span> <span class="token class-name">Router</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span>routerDelegate<span class="token punctuation">;</span>\n    <span class="token keyword">assert</span><span class="token punctuation">(</span>delegate <span class="token operator">is</span> <span class="token class-name">MyRouteDelegate</span><span class="token punctuation">,</span> <span class="token string">&#39;Delegate type must match&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> delegate <span class="token operator">as</span> <span class="token class-name">MyRouteDelegate</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token class-name">MyRouteDelegate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>onGenerateRoute<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">final</span> <span class="token class-name">RouteFactory</span> onGenerateRoute<span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">GlobalKey</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NavigatorState</span><span class="token punctuation">&gt;</span></span> navigatorKey <span class="token operator">=</span> <span class="token class-name">GlobalKey</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NavigatorState</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">String</span><span class="token operator">?</span> <span class="token keyword">get</span> currentConfiguration <span class="token operator">=</span><span class="token operator">&gt;</span> _stack<span class="token punctuation">.</span>isNotEmpty <span class="token operator">?</span> _stack<span class="token punctuation">.</span>last <span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n\n  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">get</span> stack <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">unmodifiable</span><span class="token punctuation">(</span>_stack<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">void</span> <span class="token function">toName</span><span class="token punctuation">(</span><span class="token class-name">String</span> newRoute<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _stack<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>newRoute<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">notifyListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">String</span> newRoute<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _stack<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>newRoute<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">notifyListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">String</span> routeName<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _stack<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>routeName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">notifyListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">void</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _stack<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>_stack<span class="token punctuation">.</span>last<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">notifyListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  bool <span class="token function">_onPopPage</span><span class="token punctuation">(</span><span class="token class-name">Route</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> route<span class="token punctuation">,</span> <span class="token keyword">dynamic</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>_stack<span class="token punctuation">.</span>isNotEmpty<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>_stack<span class="token punctuation">.</span>last <span class="token operator">==</span> route<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        _stack<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">notifyListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> route<span class="token punctuation">.</span><span class="token function">didPop</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">setInitialRoutePath</span><span class="token punctuation">(</span><span class="token class-name">String</span> configuration<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">setNewRoutePath</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">setNewRoutePath</span><span class="token punctuation">(</span><span class="token class-name">String</span> configuration<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _stack\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token class-name">SynchronousFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">Navigator</span><span class="token punctuation">(</span>\n      key<span class="token punctuation">:</span> navigatorKey<span class="token punctuation">,</span>\n      onPopPage<span class="token punctuation">:</span> _onPopPage<span class="token punctuation">,</span>\n      initialRoute<span class="token punctuation">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>\n      onGenerateRoute<span class="token punctuation">:</span> <span class="token punctuation">(</span>settings<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>\n          settings<span class="token punctuation">:</span> settings<span class="token punctuation">,</span>\n          builder<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">const</span> <span class="token class-name">HomePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      pages<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">final</span> name <span class="token keyword">in</span> _stack<span class="token punctuation">)</span>\n          <span class="token class-name">MyPage</span><span class="token punctuation">(</span>\n            key<span class="token punctuation">:</span> <span class="token class-name">ValueKey</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span>\n            name<span class="token punctuation">:</span> name<span class="token punctuation">,</span>\n            builder<span class="token punctuation">:</span> routerNames<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">as</span> <span class="token class-name">Widget</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">final</span> routerNames <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token string">&quot;/&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">const</span> <span class="token class-name">HomePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;/login&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">const</span> <span class="token class-name">LoginPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyPage</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token class-name">MyPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    required <span class="token class-name">LocalKey</span> key<span class="token punctuation">,</span>\n    required <span class="token class-name">String</span> name<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>builder<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">,</span> name<span class="token punctuation">:</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">final</span> <span class="token class-name">WidgetBuilder</span> builder<span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">Route</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">createRoute</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">MaterialPageRoute</span><span class="token punctuation">(</span>\n      settings<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>\n      builder<span class="token punctuation">:</span> builder<span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;$name&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyRouteParser</span> <span class="token keyword">extends</span> <span class="token class-name">RouteInformationParser</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token comment">// 接受系统传递给我们的路由信息 routeInformation，然后，返回转发给我们之前定义的路由代理 RouterDelegate，</span>\n  <span class="token comment">// 解析后的类型为 RouteInformationParser 的泛型类型，即这里的 String</span>\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">parseRouteInformation</span><span class="token punctuation">(</span><span class="token class-name">RouteInformation</span> routeInformation<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> location <span class="token operator">=</span> routeInformation<span class="token punctuation">.</span>location<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token class-name">SynchronousFuture</span><span class="token punctuation">(</span>location<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 返回一个 RouteInformation 对象，表示从传入的 configuration 恢复路由信息。</span>\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">RouteInformation</span> <span class="token function">restoreRouteInformation</span><span class="token punctuation">(</span><span class="token class-name">String</span> configuration<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">RouteInformation</span><span class="token punctuation">(</span>location<span class="token punctuation">:</span> configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br></div></div><p>d</p>',46),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);