"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[382],{8029:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-6e2c73e7",path:"/study/10.Vue/VUE-Vuex.html",title:"VUE-Vuex 状态管理",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.创建:",slug:"_1-创建",children:[{level:4,title:"组件分发方式",slug:"组件分发方式",children:[]}]},{level:2,title:"2.main.js",slug:"_2-main-js",children:[]},{level:2,title:"3.其他文件引用",slug:"_3-其他文件引用",children:[]},{level:2,title:"4.模块化结构-项目结构",slug:"_4-模块化结构-项目结构",children:[]},{level:2,title:"5.命名空间",slug:"_5-命名空间",children:[{level:4,title:"命名空间写法",slug:"命名空间写法",children:[]},{level:4,title:"在带命名空间的模块内访问全局内容",slug:"在带命名空间的模块内访问全局内容",children:[]},{level:4,title:"在带命名空间的模块注册全局 action",slug:"在带命名空间的模块注册全局-action",children:[]},{level:4,title:"模块自动注册",slug:"模块自动注册",children:[]}]},{level:2,title:"6.刷新事件beforunload解决持久化",slug:"_6-刷新事件beforunload解决持久化",children:[]}],filePathRelative:"study/10.Vue/VUE-Vuex.md",git:{updatedTime:1648781894e3}}},64:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var p=a(6252),t=a(3531);const e=(0,p.uE)('<h1 id="vue-vuex-状态管理" tabindex="-1"><a class="header-anchor" href="#vue-vuex-状态管理" aria-hidden="true">#</a> VUE-Vuex 状态管理</h1><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>安装<span class="token operator">:</span>npm install vuex <span class="token operator">--</span>save\n\nhttps<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>router<span class="token punctuation">.</span>vuejs<span class="token punctuation">.</span>org<span class="token operator">/</span>zh<span class="token operator">/</span>api<span class="token operator">/</span>#路由对象\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>页面通过mapAction异步提交事件到action。action通过commit把对应参数同步提交到mutation。 mutation会修改state中对应的值。 最后通过getter把对应值跑出去，在页面的计算属性中通过mapGetter来动态获取state中的值;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>vuex持久化</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;store&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">replaceState</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;store&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token comment">//在页面刷新时将vuex里的信息保存到localStorage里</span>\n    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;beforeunload&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;store&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_1-创建" tabindex="-1"><a class="header-anchor" href="#_1-创建" aria-hidden="true">#</a> 1.创建:</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>src文件下创建 store文件夹\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    state<span class="token operator">:</span> <span class="token punctuation">{</span>\t<span class="token comment">//状态</span>\n        userInfo<span class="token operator">:</span> <span class="token punctuation">{</span>\n            name<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n            photo<span class="token operator">:</span><span class="token string">&#39;&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>    \n    \n    mutations<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//方法,</span>\n        <span class="token function">utationA</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            state<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>name <span class="token operator">=</span> user<span class="token punctuation">.</span>name\n            state<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>photo <span class="token operator">=</span> user<span class="token punctuation">.</span>photo\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \n    actions<span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">//放异步方法</span>\n        <span class="token function">actionevent</span><span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          <span class="token comment">//context上下文 为store对象 </span>\n          <span class="token comment">// context.commit, context.state, context.getters, context,.dispatch</span>\n        <span class="token punctuation">}</span>\n        <span class="token comment">//或</span>\n        <span class="token function">actionevent</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>commit<span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// 解构写法</span>\n    \t\t<span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;utationA&#39;</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \n    computed<span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">//解决引用繁长,调用直接用计算属性{{name}}</span>\n        <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>name\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        \n        <span class="token comment">// 需引入:import { mapGetters } from &#39;vuex&#39;</span>\n        <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n            <span class="token string">&#39;namelen&#39;</span> <span class="token comment">//调用{{namelen}},调用getters中的namelen计算方法</span>\n        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token comment">// 对象写法,改变名称</span>\n        <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            newName<span class="token operator">:</span><span class="token string">&#39;namelen&#39;</span> <span class="token comment">//调用{{namelen}},调用getters中的namelen计算方法</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// </span>\n    getters<span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">//调用:$store.getters.namelen</span>\n        <span class="token function">namelen</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token operator">...</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \n\t\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> store<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><h4 id="组件分发方式" tabindex="-1"><a class="header-anchor" href="#组件分发方式" aria-hidden="true">#</a> 组件分发方式</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span>\t<span class="token comment">// 分发mutations</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 分发action</span>\n\nmap分发<span class="token operator">:</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> mapState<span class="token punctuation">,</span> mapActions<span class="token punctuation">,</span>mapMutations <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>\n computed<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">//将state映射 为 计算属性</span>\n            <span class="token function-variable function">lang</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>lang<span class="token punctuation">,</span>\n            <span class="token function-variable function">theme</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>theme\n            <span class="token function-variable function">homemodule</span><span class="token operator">:</span> <span class="token parameter">state</span><span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>Home<span class="token punctuation">.</span>homemodule\n            <span class="token comment">//命名空间写法 </span>\n            <span class="token comment">//模块中写入 namespaced: true,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    methods<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;increment2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            login<span class="token operator">:</span> <span class="token string">&#39;auth/loginByEmail&#39;</span><span class="token punctuation">,</span>\n            loadLang<span class="token operator">:</span> <span class="token string">&#39;loadLang&#39;</span>\n       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n<span class="token comment">//调用用 this.login</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="_2-main-js" tabindex="-1"><a class="header-anchor" href="#_2-main-js" aria-hidden="true">#</a> 2.main.js</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;./store&#39;</span>\n<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    router<span class="token punctuation">,</span>\n    store  <span class="token comment">//挂载</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_3-其他文件引用" tabindex="-1"><a class="header-anchor" href="#_3-其他文件引用" aria-hidden="true">#</a> 3.其他文件引用</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>js调用<span class="token operator">:</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">&#39;jack&#39;</span> <span class="token comment">//不建议,因无记录</span>\n如但文件导入则只需store\n<span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&quot;userChange&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>form<span class="token punctuation">)</span> \n\nhtml引用<span class="token operator">:</span>\n<span class="token punctuation">{</span><span class="token punctuation">{</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">//计算属性引用</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>这个状态自管理应用包含以下几个部分：</p><ul><li><strong>state</strong>，驱动应用的数据源；</li><li><strong>view</strong>，以声明方式将 <strong>state</strong> 映射到视图；</li><li><strong>actions</strong>，响应在 <strong>view</strong> 上的用户输入导致的状态变化。</li></ul><p>以下是一个表示“单向数据流”理念的简单示意：</p></blockquote><p><img src="'+t+'" alt="1569118000473"></p><h2 id="_4-模块化结构-项目结构" tabindex="-1"><a class="header-anchor" href="#_4-模块化结构-项目结构" aria-hidden="true">#</a> 4.模块化结构-项目结构</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>└── store\n    ├── index.js          # 我们组装模块并导出 store 的地方\n    ├──\tstate.js\t\t  \t\t# 根级别的 mutation\n    ├── mutations.js      # 根级别的 mutation 同步事件\n    ├── actions.js        # 根级别的 action   异步事件\n    └── modules\n        ├── cart       \t  # 购物车模块文件夹\n        ├── products   \t  # 产品模块文件夹\n        └── index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>├──index.js</p><blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>\n<span class="token keyword">import</span> vuexModules <span class="token keyword">from</span> <span class="token string">&#39;./modules&#39;</span>\n<span class="token keyword">import</span> state <span class="token keyword">from</span> <span class="token string">&#39;./state&#39;</span>\n<span class="token keyword">import</span> mutations <span class="token keyword">from</span> <span class="token string">&#39;./mutations&#39;</span>\n<span class="token keyword">import</span> actions <span class="token keyword">from</span> <span class="token string">&#39;./actions&#39;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\tstate<span class="token punctuation">,</span>\n\tmutations<span class="token punctuation">,</span>\n\tactions<span class="token punctuation">,</span>\n\tmodules<span class="token operator">:</span> vuexModules\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></blockquote><p>├── state.js</p><blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\nlang<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote><p>├── mutations.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n <span class="token function">setLang</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></blockquote><blockquote><p>├── actions.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n<span class="token function">loadLang</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>dispatch<span class="token punctuation">,</span> commit<span class="token punctuation">,</span> state<span class="token punctuation">}</span><span class="token punctuation">,</span> lang</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;addLangPack&#39;</span><span class="token punctuation">,</span> lang<span class="token punctuation">)</span> <span class="token comment">//commit触发mutations</span>\n          <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;loadLang&#39;</span><span class="token punctuation">,</span> i18n<span class="token punctuation">.</span>fallbackLocale<span class="token punctuation">)</span>  <span class="token comment">//dispatch触发 actions</span>\n<span class="token function">loadLang</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> lang</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\tcontext<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;addLangPack&#39;</span><span class="token punctuation">,</span> lang<span class="token punctuation">)</span> <span class="token comment">//commit触发mutations</span>\n\t\tcontext<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;loadLang&#39;</span><span class="token punctuation">,</span> i18n<span class="token punctuation">.</span>fallbackLocale<span class="token punctuation">)</span>  <span class="token comment">//dispatch触发 actions</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></blockquote><blockquote><p>└── modules</p><blockquote><p>├──m1文件夹</p></blockquote><blockquote><blockquote><p>├──m1.js</p></blockquote></blockquote><blockquote><blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>\ncachePage<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>\n\t<span class="token function">addTagNav</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\nnamespaced<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\tstate<span class="token punctuation">,</span>\n\tmutations\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></blockquote></blockquote><blockquote><p>index.js</p></blockquote><blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> user <span class="token keyword">from</span> <span class="token string">&#39;./m1.js&#39;</span>\n<span class="token keyword">import</span> tagNav <span class="token keyword">from</span> <span class="token string">&#39;./tagNav&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n\tuser<span class="token operator">:</span> user<span class="token punctuation">,</span>\n\ttagNav<span class="token operator">:</span> tagNav\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></blockquote></blockquote><h2 id="_5-命名空间" tabindex="-1"><a class="header-anchor" href="#_5-命名空间" aria-hidden="true">#</a> 5.命名空间</h2><p>默认情况下，模块内部的 action、mutation 和 getter 是注册在<strong>全局命名空间</strong>的。</p><p>注意：SET_A_name 命名不可用。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>未命名写法<span class="token operator">:</span> \n<span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      homename<span class="token operator">:</span> <span class="token string">&quot;homename&quot;</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">homemodule</span><span class="token operator">:</span> <span class="token parameter">state</span><span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>Home<span class="token punctuation">.</span>homemodule\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      SET_homeName<span class="token operator">:</span> <span class="token string">&quot;SET_homeName&quot;</span><span class="token punctuation">,</span>\n      SET_homemodule<span class="token operator">:</span> <span class="token string">&quot;SET_homemodule&quot;</span> <span class="token comment">//直接使用</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>当模块被注册后，它的所有 getter、action 及 mutation 都会自动根据模块注册的路径调整命名。</p><h4 id="命名空间写法" tabindex="-1"><a class="header-anchor" href="#命名空间写法" aria-hidden="true">#</a> 命名空间写法</h4><ol><li>写法-1-</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n    moduleA<span class="token operator">:</span> <span class="token punctuation">{</span>\n      namespaced<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//指定为命名空间</span>\n      state<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n<span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      homename<span class="token operator">:</span> <span class="token string">&quot;homename&quot;</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">homemodule</span><span class="token operator">:</span> <span class="token parameter">state</span><span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>Home<span class="token punctuation">.</span>homemodule\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      SET_homeName<span class="token operator">:</span> <span class="token string">&quot;SET_homeName&quot;</span><span class="token punctuation">,</span>\n      SET_homemodule<span class="token operator">:</span> <span class="token string">&quot;moduleA/SET_homemodule&quot;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    \n <span class="token operator">-</span>写法<span class="token operator">-</span><span class="token number">2</span><span class="token operator">-</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ol start="2"><li>写法-2</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>computed<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token string">&#39;moduleA&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>a<span class="token punctuation">,</span>\n    <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>b\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\nmethods<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token string">&#39;moduleA&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token comment">// -&gt; this.foo()</span>\n    <span class="token string">&#39;bar&#39;</span> <span class="token comment">// -&gt; this.bar()</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="3"><li>写法-3</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createNamespacedHelpers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> mapState<span class="token punctuation">,</span> mapActions <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createNamespacedHelpers</span><span class="token punctuation">(</span><span class="token string">&#39;some/nested/module&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  computed<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 在 `some/nested/module` 中查找</span>\n    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>a<span class="token punctuation">,</span>\n      <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>b\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  methods<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 在 `some/nested/module` 中查找</span>\n    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>\n      <span class="token string">&#39;bar&#39;</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="在带命名空间的模块内访问全局内容" tabindex="-1"><a class="header-anchor" href="#在带命名空间的模块内访问全局内容" aria-hidden="true">#</a> 在带命名空间的模块内访问全局内容</h4><ol><li>希望使用全局 state 和 getter，<code>rootState</code> 和 <code>rootGetters</code> 会作为第三和第四参数传入 getter，也会通过 <code>context</code> 对象的属性传入 action。</li><li>若需要在全局命名空间内分发 action 或提交 mutation，将 <code>{ root: true }</code> 作为第三参数传给 <code>dispatch</code> 或 <code>commit</code> 即可。</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n  foo<span class="token operator">:</span> <span class="token punctuation">{</span>\n    namespaced<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\n    getters<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 在这个模块的 getter 中，`getters` 被局部化了</span>\n      <span class="token comment">// 你可以使用 getter 的第四个参数来调用 `rootGetters`</span>\n      <span class="token function">someGetter</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> getters<span class="token punctuation">,</span> rootState<span class="token punctuation">,</span> rootGetters</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        getters<span class="token punctuation">.</span>someOtherGetter <span class="token comment">// -&gt; &#39;foo/someOtherGetter&#39;</span>\n        rootGetters<span class="token punctuation">.</span>someOtherGetter <span class="token comment">// -&gt; &#39;someOtherGetter&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">someOtherGetter</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n    actions<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 在这个模块中， dispatch 和 commit 也被局部化了</span>\n      <span class="token comment">// 他们可以接受 `root` 属性以访问根 dispatch 或 commit</span>\n      <span class="token function">someAction</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> dispatch<span class="token punctuation">,</span> commit<span class="token punctuation">,</span> getters<span class="token punctuation">,</span> rootGetters <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        getters<span class="token punctuation">.</span>someGetter <span class="token comment">// -&gt; &#39;foo/someGetter&#39;</span>\n        rootGetters<span class="token punctuation">.</span>someGetter <span class="token comment">// -&gt; &#39;someGetter&#39;</span>\n\n        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;someOtherAction&#39;</span><span class="token punctuation">)</span> <span class="token comment">// -&gt; &#39;foo/someOtherAction&#39;</span>\n        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;someOtherAction&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> root<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// -&gt; &#39;someOtherAction&#39;</span>\n\n        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;someMutation&#39;</span><span class="token punctuation">)</span> <span class="token comment">// -&gt; &#39;foo/someMutation&#39;</span>\n        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;someMutation&#39;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> root<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// -&gt; &#39;someMutation&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token function">someOtherAction</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h4 id="在带命名空间的模块注册全局-action" tabindex="-1"><a class="header-anchor" href="#在带命名空间的模块注册全局-action" aria-hidden="true">#</a> 在带命名空间的模块注册全局 action</h4><ol><li>若需要在带命名空间的模块注册全局 action，你可添加 <code>root: true</code>，并将这个 action 的定义放在函数 <code>handler</code> 中。例如：</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  actions<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">someOtherAction</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>dispatch<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">&#39;someAction&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n    foo<span class="token operator">:</span> <span class="token punctuation">{</span>\n      namespaced<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      actions<span class="token operator">:</span> <span class="token punctuation">{</span>\n        someAction<span class="token operator">:</span> <span class="token punctuation">{</span>\n          root<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token function">handler</span> <span class="token punctuation">(</span><span class="token parameter">namespacedContext<span class="token punctuation">,</span> payload</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// -&gt; &#39;someAction&#39;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="模块自动注册" tabindex="-1"><a class="header-anchor" href="#模块自动注册" aria-hidden="true">#</a> 模块自动注册</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> context <span class="token operator">=</span> require<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">&#39;./modules&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> moduleStores <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\ncontext<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> fileName <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> fileModule <span class="token operator">=</span> <span class="token function">context</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span>\n    moduleStores<span class="token punctuation">[</span>fileName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>fileModule<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token operator">...</span>moduleStores<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    state<span class="token operator">:</span> <span class="token punctuation">{</span>\n        curcity<span class="token operator">:</span> <span class="token punctuation">{</span>\n            province<span class="token operator">:</span> <span class="token string">&#39;广东省&#39;</span><span class="token punctuation">,</span>\n            provinceId<span class="token operator">:</span> <span class="token number">440000</span><span class="token punctuation">,</span>\n            city<span class="token operator">:</span> <span class="token string">&#39;深圳&#39;</span><span class="token punctuation">,</span>\n            cityId<span class="token operator">:</span> <span class="token number">440300</span><span class="token punctuation">,</span>\n            cityshortnamepinyin<span class="token operator">:</span> <span class="token string">&#39;sz&#39;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        sessionCallBack<span class="token operator">:</span> <span class="token string">&#39;&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    mutations<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    actions<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> store\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="_6-刷新事件beforunload解决持久化" tabindex="-1"><a class="header-anchor" href="#_6-刷新事件beforunload解决持久化" aria-hidden="true">#</a> 6.刷新事件beforunload解决持久化</h2><p>持久化插件:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>robinvdvleuten<span class="token operator">/</span>vuex<span class="token operator">-</span>persistedstate\nnpm install <span class="token operator">--</span>save vuex<span class="token operator">-</span>persistedstate\n\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">&#39;vuex&#39;</span>\n<span class="token keyword">import</span> createPersistedState <span class="token keyword">from</span> <span class="token string">&quot;vuex-persistedstate&quot;</span>\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  state<span class="token operator">:</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span><span class="token string">&#39;walle&#39;</span><span class="token punctuation">,</span>\n    routeInfo<span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span><span class="token string">&#39;18888888888888&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  mutations<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  actions<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">createPersistedState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    storage<span class="token operator">:</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">,</span>\n    key<span class="token operator">:</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">,</span>\n    <span class="token function">reducer</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//指定需要持久化state</span>\n      <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 只储存state中的assessmentData</span>\n      assessmentData<span class="token operator">:</span> state<span class="token punctuation">.</span>age\n     <span class="token punctuation">}</span>\n     <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>刷新</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">replaceState</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n    <span class="token comment">//window.localStorage.clear() 防止用户看到 或 加密</span>\n    \n    <span class="token comment">// window.addEventListener(&#39;beforeunload&#39;,()=&gt;{</span>\n    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;pagehide&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token comment">//移动端beforeunload不生效 代替方案</span>\n      localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',45),o={},c=(0,a(3744).Z)(o,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}},3531:(n,s,a)=>{n.exports=a.p+"assets/img/1569118000473.4012dd93.png"}}]);