"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1842],{9372:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-312c0e87",path:"/study/15.%E7%A7%BB%E5%8A%A8%E7%AB%AF/uniapp.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"study/15.移动端/uniapp.md",git:{updatedTime:1659367179e3}}},9796:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var p=a(6252);const t={class:"language-javascript ext-js line-numbers-mode"},o=[(0,p.uE)('<pre class="language-javascript"><code><span class="token keyword">let</span> _canvas <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">createOffscreenCanvas</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;2d&#39;</span><span class="token punctuation">,</span> width<span class="token operator">:</span> _w<span class="token punctuation">,</span> height<span class="token operator">:</span> _h <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">let</span> ctx <span class="token operator">=</span> _canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token comment">// 创建一个图片</span>\n                <span class="token keyword">let</span> image <span class="token operator">=</span> _canvas<span class="token punctuation">.</span><span class="token function">createImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">// 等待图片加载</span>\n                <span class="token keyword">try</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">loadResolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                        image<span class="token punctuation">.</span>onload <span class="token operator">=</span> loadResolve<span class="token punctuation">;</span>\n                        image<span class="token punctuation">.</span>src <span class="token operator">=</span> tempFilePaths<span class="token punctuation">;</span> <span class="token comment">// 要加载的图片 url</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;image.onload&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token function">resolve</span><span class="token punctuation">(</span>tempFilePaths<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> _w<span class="token punctuation">,</span> _h<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> _w<span class="token punctuation">,</span> _h<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">/// 水印</span>\n                <span class="token keyword">let</span> fontSize <span class="token operator">=</span> _w <span class="token operator">*</span> <span class="token number">0.02</span><span class="token punctuation">;</span>\n                ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">normal bold </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fontSize<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px sans-serif</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&#39;#FFFFFF&#39;</span><span class="token punctuation">;</span>\n                ctx<span class="token punctuation">.</span>shadowBlur <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n        ctx<span class="token punctuation">.</span>shadowColor <span class="token operator">=</span> <span class="token string">&#39;rgba(0, 0, 0, 0.5)&#39;</span><span class="token punctuation">;</span>\n                <span class="token keyword">let</span> _time <span class="token operator">=</span> L3DateHandler<span class="token punctuation">.</span><span class="token function">getDateStringToSec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>_time<span class="token punctuation">,</span> fontSize<span class="token punctuation">,</span> _h<span class="token operator">-</span>fontSize<span class="token operator">*</span><span class="token number">2</span><span class="token operator">-</span>fontSize<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>_props<span class="token punctuation">.</span>address<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>_props<span class="token punctuation">.</span>address<span class="token punctuation">,</span> fontSize<span class="token punctuation">,</span> _h<span class="token operator">-</span>fontSize<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ctx&#39;</span><span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> _canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">// 获取base64图像</span>\n                <span class="token keyword">const</span> b64Data <span class="token operator">=</span> ctx<span class="token punctuation">.</span>canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">const</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">const</span> filePath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>uni<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">USER_DATA_PATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/temp_image_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.png</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n                <span class="token comment">// base64格式的图片要去除逗号前面的部分才能正确解码</span>\n                <span class="token keyword">const</span> buffer <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">base64ToArrayBuffer</span><span class="token punctuation">(</span>b64Data<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>b64Data<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token comment">// 写入临时文件</span>\n                uni<span class="token punctuation">.</span><span class="token function">getFileSystemManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                    filePath<span class="token punctuation">,</span>\n                    data<span class="token operator">:</span> buffer<span class="token punctuation">,</span>\n                    encoding<span class="token operator">:</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;保存图片：&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">,</span> filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token function">resolve</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">fail</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token operator">:</span>any</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n                        <span class="token function">resolve</span><span class="token punctuation">(</span>tempFilePaths<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div>',2)],e={},c=(0,a(3744).Z)(e,[["render",function(n,s){return(0,p.wg)(),(0,p.iD)("div",t,o)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);