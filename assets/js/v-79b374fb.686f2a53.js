"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3751],{2660:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-79b374fb",path:"/study/19.Flutter/flutter_tools.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"防抖截流",slug:"防抖截流",children:[{level:3,title:"防抖",slug:"防抖",children:[]},{level:3,title:"截流",slug:"截流",children:[]}]},{level:2,title:"tab实现",slug:"tab实现",children:[]},{level:2,title:"获取元素信息",slug:"获取元素信息",children:[]},{level:2,title:"HslColor",slug:"hslcolor",children:[]},{level:2,title:"doubleFormatter",slug:"doubleformatter",children:[]},{level:2,title:"数据处理",slug:"数据处理",children:[{level:3,title:"array 转 tree",slug:"array-转-tree",children:[]}]}],filePathRelative:"study/19.Flutter/flutter_tools.md",git:{updatedTime:1641377714e3}}},8911:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h2 id="防抖截流" tabindex="-1"><a class="header-anchor" href="#防抖截流" aria-hidden="true">#</a> 防抖截流</h2><h3 id="防抖" tabindex="-1"><a class="header-anchor" href="#防抖" aria-hidden="true">#</a> 防抖</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string">&#39;dart:async&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">/// 函数防抖</span>\n<span class="token comment">///</span>\n<span class="token comment">/// [func]: 要执行的方法</span>\n<span class="token comment">/// [delay]: 要迟延的时长</span>\n<span class="token class-name">Function</span> <span class="token function">debounce</span><span class="token punctuation">(</span>\n  <span class="token class-name">Function</span> func<span class="token punctuation">,</span> <span class="token punctuation">[</span>\n  <span class="token class-name">Duration</span> delay <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token class-name">Timer</span> timer<span class="token punctuation">;</span>\n  <span class="token class-name">Function</span> target <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token operator">?</span><span class="token punctuation">.</span>isActive <span class="token operator">?</span><span class="token operator">?</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      timer<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    timer <span class="token operator">=</span> <span class="token class-name">Timer</span><span class="token punctuation">(</span>delay<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      func<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> target<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/// 使用</span>\n<span class="token function">debounce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>；\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="截流" tabindex="-1"><a class="header-anchor" href="#截流" aria-hidden="true">#</a> 截流</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">Function</span> <span class="token function">debounce</span><span class="token punctuation">(</span>\n  <span class="token class-name">Function</span> callback<span class="token punctuation">,</span> <span class="token punctuation">[</span>\n  <span class="token class-name">Duration</span> delay <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n <span class="token keyword">var</span> debounceActive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n <span class="token keyword">if</span> <span class="token punctuation">(</span>debounceActive<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n  debounceActive <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token keyword">await</span> <span class="token class-name">Future</span><span class="token punctuation">.</span><span class="token function">delayed</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  debounceActive <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n  <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="tab实现" tabindex="-1"><a class="header-anchor" href="#tab实现" aria-hidden="true">#</a> tab实现</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string">&#39;dart:developer&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token string">&#39;package:flutter/material.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:flutter_screenutil/flutter_screenutil.dart&#39;</span><span class="token punctuation">;</span>\n\n\n\n<span class="token keyword">class</span> <span class="token class-name">ZjTabBlockScroll</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> int initIndex<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> <span class="token class-name">Function</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span> onTap<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> tapTitleList<span class="token punctuation">;</span>\n  <span class="token keyword">final</span> <span class="token class-name">TabController</span><span class="token operator">?</span> controller<span class="token punctuation">;</span>\n\n  <span class="token keyword">final</span> double<span class="token operator">?</span> height<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token class-name">ZjTabBlockScroll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>initIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>controller<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>onTap<span class="token punctuation">,</span>\n    required <span class="token keyword">this</span><span class="token punctuation">.</span>tapTitleList<span class="token punctuation">,</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  _SaleClueTabState <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_SaleClueTabState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> _SaleClueTabState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ZjTabBlockScroll</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>\n  int _index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// double _animationValue = 0;</span>\n  <span class="token comment">// double _value = 0;</span>\n\n  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GlobalKey</span><span class="token punctuation">&gt;</span></span> tabItemKeyList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">&gt;</span></span> tabItemWidthList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token class-name">ScrollController</span> _controller <span class="token operator">=</span> <span class="token class-name">ScrollController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token class-name">ValueNotifier</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">&gt;</span></span> _position <span class="token operator">=</span> <span class="token class-name">ValueNotifier</span><span class="token generics"><span class="token punctuation">&lt;</span>double<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token keyword">void</span> <span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    _index <span class="token operator">=</span> widget<span class="token punctuation">.</span>initIndex<span class="token punctuation">;</span>\n    widget<span class="token punctuation">.</span>controller<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        _index <span class="token operator">=</span> widget<span class="token punctuation">.</span>controller<span class="token operator">?</span><span class="token punctuation">.</span>index <span class="token operator">?</span><span class="token operator">?</span> <span class="token number">0</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    widget<span class="token punctuation">.</span>controller<span class="token operator">?</span><span class="token punctuation">.</span>animation<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      _position<span class="token punctuation">.</span>value <span class="token operator">=</span> widget<span class="token punctuation">.</span>controller<span class="token operator">?</span><span class="token punctuation">.</span>animation<span class="token operator">?</span><span class="token punctuation">.</span>value <span class="token operator">?</span><span class="token operator">?</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    widget<span class="token punctuation">.</span>tapTitleList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      tabItemKeyList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">GlobalKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token class-name">WidgetsBinding</span><span class="token punctuation">.</span>instance<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">addPostFrameCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span>timeStamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>tabItemWidthList<span class="token punctuation">.</span>isEmpty<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        tabItemKeyList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token class-name">RenderObject</span> renderObject <span class="token operator">=</span> element<span class="token punctuation">.</span>currentContext<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">findRenderObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">as</span> <span class="token class-name">RenderObject</span><span class="token punctuation">;</span>\n          tabItemWidthList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>renderObject<span class="token punctuation">.</span>paintBounds<span class="token punctuation">.</span>size<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">setStateIndexToJumpto</span><span class="token punctuation">(</span>int i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>tabItemWidthList<span class="token punctuation">.</span>isNotEmpty<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token class-name">RenderObject</span> renderObject <span class="token operator">=</span>\n          tabItemKeyList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>currentContext<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">findRenderObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">as</span> <span class="token class-name">RenderObject</span><span class="token punctuation">;</span>\n      <span class="token keyword">var</span> translation <span class="token operator">=</span> renderObject<span class="token punctuation">.</span><span class="token function">getTransformTo</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTranslation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      double half <span class="token operator">=</span> <span class="token number">1.</span>sw <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n      double centerXLeft <span class="token operator">=</span> half <span class="token operator">-</span> tabItemWidthList<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n      double centerXRight <span class="token operator">=</span> half <span class="token operator">+</span> tabItemWidthList<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>translation<span class="token punctuation">.</span>x <span class="token operator">&gt;=</span> centerXLeft <span class="token operator">&amp;&amp;</span> translation<span class="token punctuation">.</span>x <span class="token operator">&lt;=</span> centerXRight<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>translation<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> half<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        double jumpto <span class="token operator">=</span> _controller<span class="token punctuation">.</span>offset <span class="token operator">-</span> tabItemWidthList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>jumpto <span class="token operator">&lt;=</span> _controller<span class="token punctuation">.</span>position<span class="token punctuation">.</span>minScrollExtent<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">_animateTo</span><span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>position<span class="token punctuation">.</span>minScrollExtent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          <span class="token function">_animateTo</span><span class="token punctuation">(</span>jumpto<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        double jumpto <span class="token operator">=</span> _controller<span class="token punctuation">.</span>offset <span class="token operator">+</span> tabItemWidthList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>jumpto <span class="token operator">&gt;=</span> _controller<span class="token punctuation">.</span>position<span class="token punctuation">.</span>maxScrollExtent<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">_animateTo</span><span class="token punctuation">(</span>_controller<span class="token punctuation">.</span>position<span class="token punctuation">.</span>maxScrollExtent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          <span class="token function">_animateTo</span><span class="token punctuation">(</span>jumpto<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">_animateTo</span><span class="token punctuation">(</span>double p<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _controller<span class="token punctuation">.</span><span class="token function">animateTo</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>milliseconds<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> curve<span class="token punctuation">:</span> <span class="token class-name">Curves</span><span class="token punctuation">.</span>linear<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  double <span class="token function">getPositionLeft</span><span class="token punctuation">(</span>double i<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>tabItemWidthList<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0.0</span><span class="token punctuation">;</span>\n    double _p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    int len <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span>len<span class="token punctuation">,</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      _p <span class="token operator">+=</span> tabItemWidthList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    double value <span class="token operator">=</span> i <span class="token operator">-</span> len<span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">==</span> tabItemWidthList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> _p <span class="token operator">+</span> value <span class="token operator">*</span> <span class="token punctuation">(</span>tabItemWidthList<span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> _p <span class="token operator">+</span> value <span class="token operator">*</span> <span class="token punctuation">(</span>tabItemWidthList<span class="token punctuation">[</span>len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token keyword">void</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    widget<span class="token punctuation">.</span>controller<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    _controller<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name">ListView</span><span class="token punctuation">(</span>\n      scrollDirection<span class="token punctuation">:</span> <span class="token class-name">Axis</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">,</span>\n      shrinkWrap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      controller<span class="token punctuation">:</span> _controller<span class="token punctuation">,</span>\n      children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token class-name">Container</span><span class="token punctuation">(</span>\n          alignment<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>centerLeft<span class="token punctuation">,</span>\n          decoration<span class="token punctuation">:</span> <span class="token class-name">BoxDecoration</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Colors</span><span class="token punctuation">.</span>white<span class="token punctuation">,</span> boxShadow<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n            <span class="token class-name">BoxShadow</span><span class="token punctuation">(</span>\n              color<span class="token punctuation">:</span> <span class="token class-name">ZjColor</span><span class="token punctuation">.</span>divider<span class="token punctuation">,</span>\n              blurRadius<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            <span class="token punctuation">)</span>\n          <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          child<span class="token punctuation">:</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span>\n            children<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              tabItemWidthList<span class="token punctuation">.</span>isEmpty\n                  <span class="token operator">?</span> <span class="token class-name">SizedBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n                  <span class="token punctuation">:</span> <span class="token class-name">ValueListenableBuilder</span><span class="token punctuation">(</span>\n                      valueListenable<span class="token punctuation">:</span> _position<span class="token punctuation">,</span>\n                      builder<span class="token punctuation">:</span> <span class="token punctuation">(</span>c<span class="token punctuation">,</span> double i<span class="token punctuation">,</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">return</span> <span class="token class-name">Positioned</span><span class="token punctuation">(</span>\n                          left<span class="token punctuation">:</span> <span class="token function">getPositionLeft</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                          child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n                            width<span class="token punctuation">:</span> tabItemWidthList<span class="token punctuation">[</span>i<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                            color<span class="token punctuation">:</span> <span class="token class-name">ZjColor</span><span class="token punctuation">.</span>active<span class="token punctuation">,</span>\n                            height<span class="token punctuation">:</span> widget<span class="token punctuation">.</span>height <span class="token operator">?</span><span class="token operator">?</span> <span class="token number">46.</span>w<span class="token punctuation">,</span>\n                          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token class-name">Row</span><span class="token punctuation">(</span>\n                children<span class="token punctuation">:</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span>\n                  widget<span class="token punctuation">.</span>tapTitleList<span class="token punctuation">.</span>length<span class="token punctuation">,</span>\n                  <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">GestureDetector</span><span class="token punctuation">(</span>\n                    behavior<span class="token punctuation">:</span> <span class="token class-name">HitTestBehavior</span><span class="token punctuation">.</span>opaque<span class="token punctuation">,</span>\n                    onTap<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                      widget<span class="token punctuation">.</span><span class="token function">onTap</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                      <span class="token function">setStateIndexToJumpto</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                    child<span class="token punctuation">:</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>\n                      key<span class="token punctuation">:</span> tabItemKeyList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span>\n                      alignment<span class="token punctuation">:</span> <span class="token class-name">Alignment</span><span class="token punctuation">.</span>center<span class="token punctuation">,</span>\n                      padding<span class="token punctuation">:</span> <span class="token class-name">EdgeInsets</span><span class="token punctuation">.</span><span class="token function">symmetric</span><span class="token punctuation">(</span>horizontal<span class="token punctuation">:</span> <span class="token number">15.</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                      child<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>\n                        <span class="token string">&#39;${widget.tapTitleList[index]}&#39;</span><span class="token punctuation">,</span>\n                        style<span class="token punctuation">:</span> <span class="token class-name">ZjTextStyle</span><span class="token punctuation">.</span>h3Primary<span class="token punctuation">.</span><span class="token function">copyWith</span><span class="token punctuation">(</span>\n                            fontWeight<span class="token punctuation">:</span> _index <span class="token operator">==</span> index <span class="token operator">?</span> <span class="token class-name">FontWeight</span><span class="token punctuation">.</span>w500 <span class="token punctuation">:</span> <span class="token class-name">FontWeight</span><span class="token punctuation">.</span>w400<span class="token punctuation">,</span>\n                            color<span class="token punctuation">:</span> _index <span class="token operator">==</span> index <span class="token operator">?</span> <span class="token class-name">ZjColorText</span><span class="token punctuation">.</span>white <span class="token punctuation">:</span> <span class="token class-name">ZjColorText</span><span class="token punctuation">.</span>active<span class="token punctuation">,</span>\n                            shadows<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                              <span class="token class-name">Shadow</span><span class="token punctuation">(</span>\n                                blurRadius<span class="token punctuation">:</span> <span class="token number">4.0</span><span class="token punctuation">,</span>\n                                color<span class="token punctuation">:</span> _index <span class="token operator">!=</span> index <span class="token operator">?</span> <span class="token class-name">ZjColorText</span><span class="token punctuation">.</span>white <span class="token punctuation">:</span> <span class="token class-name">ZjColorText</span><span class="token punctuation">.</span>active<span class="token punctuation">,</span>\n                              <span class="token punctuation">)</span>\n                            <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                      <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br></div></div><h2 id="获取元素信息" tabindex="-1"><a class="header-anchor" href="#获取元素信息" aria-hidden="true">#</a> 获取元素信息</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">Offset</span><span class="token operator">?</span> <span class="token function">getPositionFromKey</span><span class="token punctuation">(</span><span class="token class-name">GlobalKey</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> <span class="token class-name">RenderBox</span><span class="token operator">?</span> box <span class="token operator">=</span> key<span class="token punctuation">.</span>currentContext<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">findRenderObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">as</span> <span class="token class-name">RenderBox</span><span class="token operator">?</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> box<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">localToGlobal</span><span class="token punctuation">(</span><span class="token class-name">Offset</span><span class="token punctuation">.</span>zero<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Size</span><span class="token operator">?</span> <span class="token function">getSizeFromKey</span><span class="token punctuation">(</span><span class="token class-name">GlobalKey</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> <span class="token class-name">RenderBox</span><span class="token operator">?</span> box <span class="token operator">=</span> key<span class="token punctuation">.</span>currentContext<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">findRenderObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">as</span> <span class="token class-name">RenderBox</span><span class="token operator">?</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> box<span class="token operator">?</span><span class="token punctuation">.</span>size<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">Offset</span> <span class="token function">getCenterOffsetFromKey</span><span class="token punctuation">(</span><span class="token class-name">GlobalKey</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> size <span class="token operator">=</span> <span class="token function">getSizeFromKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">final</span> pos <span class="token operator">=</span> <span class="token function">getPositionFromKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> size <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token class-name">Offset</span><span class="token punctuation">(</span>pos<span class="token punctuation">.</span>dx <span class="token operator">+</span> size<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> pos<span class="token punctuation">.</span>dy <span class="token operator">+</span> size<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">else</span>\n    <span class="token keyword">return</span> <span class="token class-name">Offset</span><span class="token punctuation">.</span>zero<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="hslcolor" tabindex="-1"><a class="header-anchor" href="#hslcolor" aria-hidden="true">#</a> HslColor</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">HslColor</span> <span class="token punctuation">{</span>\n  double h<span class="token punctuation">;</span>\n  double s<span class="token punctuation">;</span>\n  double l<span class="token punctuation">;</span>\n  double a<span class="token punctuation">;</span>\n\n  <span class="token class-name">HslColor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>required <span class="token keyword">this</span><span class="token punctuation">.</span>h<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>s<span class="token punctuation">,</span> required <span class="token keyword">this</span><span class="token punctuation">.</span>l<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">&quot;HSL(h: $h, s: $s, l: $l, a: $a)&quot;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="doubleformatter" tabindex="-1"><a class="header-anchor" href="#doubleformatter" aria-hidden="true">#</a> doubleFormatter</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/services.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">RegExInputFormatter</span> <span class="token keyword">implements</span> <span class="token class-name">TextInputFormatter</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> <span class="token class-name">RegExp</span> _regExp<span class="token punctuation">;</span>\n\n  <span class="token class-name">RegExInputFormatter</span><span class="token punctuation">.</span><span class="token function">_</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_regExp<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">factory</span> <span class="token class-name">RegExInputFormatter</span><span class="token punctuation">.</span><span class="token function">withRegex</span><span class="token punctuation">(</span><span class="token class-name">String</span> regexString<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">final</span> regex <span class="token operator">=</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>regexString<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token class-name">RegExInputFormatter</span><span class="token punctuation">.</span><span class="token function">_</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Something not right with regex string.</span>\n      <span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token class-name">RegExInputFormatter</span><span class="token punctuation">.</span><span class="token function">_</span><span class="token punctuation">(</span><span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token metadata symbol">@override</span>\n  <span class="token class-name">TextEditingValue</span> <span class="token function">formatEditUpdate</span><span class="token punctuation">(</span>\n      <span class="token class-name">TextEditingValue</span> oldValue<span class="token punctuation">,</span> <span class="token class-name">TextEditingValue</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">final</span> oldValueValid <span class="token operator">=</span> <span class="token function">_isValid</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">final</span> newValueValid <span class="token operator">=</span> <span class="token function">_isValid</span><span class="token punctuation">(</span>newValue<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldValueValid <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>newValueValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> newValue<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  bool <span class="token function">_isValid</span><span class="token punctuation">(</span><span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">final</span> matches <span class="token operator">=</span> _regExp<span class="token punctuation">.</span><span class="token function">allMatches</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Match</span> match <span class="token keyword">in</span> matches<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">.</span>start <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> match<span class="token punctuation">.</span>end <span class="token operator">==</span> value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Invalid regex</span>\n      <span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">final</span> doubleFormatter <span class="token operator">=</span>\n    <span class="token class-name">RegExInputFormatter</span><span class="token punctuation">.</span><span class="token function">withRegex</span><span class="token punctuation">(</span><span class="token string">&#39;^\\$|^(0|([1-9][0-9]{0,}))(\\\\.[0-9]{0,})?\\$&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h2 id="数据处理" tabindex="-1"><a class="header-anchor" href="#数据处理" aria-hidden="true">#</a> 数据处理</h2><h3 id="array-转-tree" tabindex="-1"><a class="header-anchor" href="#array-转-tree" aria-hidden="true">#</a> array 转 tree</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">final</span> <span class="token class-name">Map</span> departmentItemMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> \n<span class="token class-name">List</span> <span class="token function">arrayToTree</span><span class="token punctuation">(</span><span class="token class-name">List</span> items<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">List</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 存放结果集</span>\n    <span class="token comment">//</span>\n    items<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">dynamic</span> id <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">dynamic</span> pid <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&#39;parentid&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>departmentItemMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        departmentItemMap<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n          <span class="token string">&quot;children&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      departmentItemMap<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>item<span class="token punctuation">,</span> <span class="token string">&quot;children&quot;</span><span class="token punctuation">:</span> departmentItemMap<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;children&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">var</span> treeItem <span class="token operator">=</span> departmentItemMap<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>pid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>treeItem<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>departmentItemMap<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          departmentItemMap<span class="token punctuation">[</span>pid<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n            <span class="token string">&quot;children&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        departmentItemMap<span class="token punctuation">[</span>pid<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;children&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>treeItem<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div>',16),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);