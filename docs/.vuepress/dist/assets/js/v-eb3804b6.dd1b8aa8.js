"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[449],{9661:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-eb3804b6",path:"/study/19.Flutter/flutter_native.html",title:"flutter与原生通信",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"flutter 与 Android通信",slug:"flutter-与-android通信",children:[{level:3,title:"MethodChannel",slug:"methodchannel",children:[]},{level:3,title:"BasicMessageChannel",slug:"basicmessagechannel",children:[]},{level:3,title:"EventChannel",slug:"eventchannel",children:[]}]},{level:2,title:"flutter 与 Android 消息通信示例",slug:"flutter-与-android-消息通信示例",children:[]}],filePathRelative:"study/19.Flutter/flutter_native.md",git:{updatedTime:1644302922e3}}},2187:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h1 id="flutter与原生通信" tabindex="-1"><a class="header-anchor" href="#flutter与原生通信" aria-hidden="true">#</a> flutter与原生通信</h1><p>https://docs.flutter.dev/development/platform-integration/platform-channels</p><h2 id="flutter-与-android通信" tabindex="-1"><a class="header-anchor" href="#flutter-与-android通信" aria-hidden="true">#</a> flutter 与 Android通信</h2><h3 id="methodchannel" tabindex="-1"><a class="header-anchor" href="#methodchannel" aria-hidden="true">#</a> MethodChannel</h3><p>用于传递方法调用</p><p><strong>flutter 端：</strong></p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string">&#39;package:flutter/services.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FlAndAChannel</span> <span class="token punctuation">{</span>\n  <span class="token keyword">static</span> <span class="token class-name">String</span> _channelName <span class="token operator">=</span> <span class="token string">&#39;com.your.your/your&#39;</span><span class="token punctuation">;</span>\n  <span class="token keyword">static</span> late <span class="token class-name">MethodChannel</span> _methodhannel<span class="token punctuation">;</span>\n  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">/// 注册</span>\n    _methodhannel <span class="token operator">=</span> <span class="token class-name">MethodChannel</span><span class="token punctuation">(</span>_channelName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">static</span> <span class="token function">listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">/// 监听原生的 invokeMethod</span>\n    _methodhannel<span class="token punctuation">.</span><span class="token function">setMethodCallHandler</span><span class="token punctuation">(</span><span class="token punctuation">(</span>call<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>call<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;yourMethodName&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span>call<span class="token punctuation">.</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// yourMethodName method</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>call<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;yourMethodName2&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span>call<span class="token punctuation">.</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// yourMethodName2 method</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token class-name">Future</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">static</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n    <span class="token comment">/// 触发原生的 methodName 方法</span>\n    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">await</span> _methodhannel<span class="token punctuation">.</span><span class="token function">invokeMethod</span><span class="token punctuation">(</span><span class="token string">&#39;methodName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> _data <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p><strong>android 端:</strong></p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>NonNull\n<span class="token keyword">import</span> io<span class="token punctuation">.</span>flutter<span class="token punctuation">.</span>embedding<span class="token punctuation">.</span>android<span class="token punctuation">.</span>FlutterActivity\n<span class="token keyword">import</span> io<span class="token punctuation">.</span>flutter<span class="token punctuation">.</span>embedding<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>FlutterEngine\n<span class="token keyword">import</span> io<span class="token punctuation">.</span>flutter<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span>common<span class="token punctuation">.</span>MethodChannel\n\n<span class="token keyword">class</span> MainActivity<span class="token operator">:</span> <span class="token function">FlutterActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 与flutter端 _channelName 相同 </span>\n  <span class="token keyword">private</span> <span class="token keyword">val</span> CHANNEL <span class="token operator">=</span> <span class="token string">&quot;com.your.your/your&quot;</span>\n\n  <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">configureFlutterEngine</span><span class="token punctuation">(</span><span class="token annotation builtin">@NonNull</span> flutterEngine<span class="token operator">:</span> FlutterEngine<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configureFlutterEngine</span><span class="token punctuation">(</span>flutterEngine<span class="token punctuation">)</span>\n    <span class="token comment">// 注册监听</span>\n    <span class="token function">MethodChannel</span><span class="token punctuation">(</span>flutterEngine<span class="token punctuation">.</span>dartExecutor<span class="token punctuation">.</span>binaryMessenger<span class="token punctuation">,</span> CHANNEL<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMethodCallHandler</span> <span class="token punctuation">{</span>\n      call<span class="token punctuation">,</span> result <span class="token operator">-&gt;</span>\n      \n      <span class="token keyword">if</span> <span class="token punctuation">(</span>call<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&quot;yourMethodName&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t\t<span class="token comment">// TODO</span>\n        result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;yourMethodName method&quot;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>call<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&quot;yourMethodName2&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t\t<span class="token comment">// TODO</span>\n        result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;yourMethodName2 method&quot;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        result<span class="token punctuation">.</span><span class="token function">notImplemented</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="basicmessagechannel" tabindex="-1"><a class="header-anchor" href="#basicmessagechannel" aria-hidden="true">#</a> BasicMessageChannel</h3><p>用于传递字符串和半结构化的信息</p><p><strong>flutter 端：</strong></p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token class-name">BasicMessageChannel</span> _bChannel <span class="token operator">=</span> <span class="token class-name">BasicMessageChannel</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span><span class="token class-name">StandardMessageCodec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">/// 发送消息 navite返回结果</span>\n<span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">await</span> _bChannel<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;laomeng&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> name <span class="token operator">=</span> result<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> age <span class="token operator">=</span> result<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment">/// 监听</span>\n _bChannel<span class="token punctuation">.</span><span class="token function">setMessageHandler</span><span class="token punctuation">(</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token class-name">Future</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><table><thead><tr><th style="text-align:left;">编码类型</th><th style="text-align:left;">消息格式</th></tr></thead><tbody><tr><td style="text-align:left;">BinaryCodec</td><td style="text-align:left;">发送二进制消息时</td></tr><tr><td style="text-align:left;">JSONMessageCodec</td><td style="text-align:left;">发送Json格式消息时</td></tr><tr><td style="text-align:left;">StandardMessageCodec</td><td style="text-align:left;">发送基本型数据时</td></tr><tr><td style="text-align:left;">StringCodec</td><td style="text-align:left;">发送String类型消息时</td></tr></tbody></table><p><strong>Android 端：</strong></p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">FlutterActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">configureFlutterEngine</span><span class="token punctuation">(</span>flutterEngine<span class="token operator">:</span> FlutterEngine<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configureFlutterEngine</span><span class="token punctuation">(</span>flutterEngine<span class="token punctuation">)</span>\n        <span class="token function">BasicMessageChannelDemo</span><span class="token punctuation">(</span>flutterEngine<span class="token punctuation">.</span>dartExecutor<span class="token punctuation">.</span>binaryMessenger<span class="token punctuation">)</span>\n        flutterEngine<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">MyPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token keyword">class</span> <span class="token function">BasicMessageChannelDemo</span><span class="token punctuation">(</span>messenger<span class="token operator">:</span> BinaryMessenger<span class="token punctuation">)</span> <span class="token operator">:</span> BasicMessageChannel<span class="token punctuation">.</span>MessageHandler<span class="token operator">&lt;</span>Any<span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n\n    <span class="token keyword">private</span> <span class="token keyword">var</span> channel<span class="token operator">:</span> BasicMessageChannel<span class="token operator">&lt;</span>Any<span class="token operator">&gt;</span>\n\n    <span class="token keyword">init</span> <span class="token punctuation">{</span>\n        channel <span class="token operator">=</span> <span class="token function">BasicMessageChannel</span><span class="token punctuation">(</span>messenger<span class="token punctuation">,</span> <span class="token string">&quot;com.your.your/your&quot;</span><span class="token punctuation">,</span> <span class="token function">StandardMessageCodec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        channel<span class="token punctuation">.</span><span class="token function">setMessageHandler</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n  <span class="token keyword">override</span> \n  <span class="token keyword">fun</span> <span class="token function">onMessage</span><span class="token punctuation">(</span>message<span class="token operator">:</span> Any<span class="token operator">?</span><span class="token punctuation">,</span> reply<span class="token operator">:</span> BasicMessageChannel<span class="token punctuation">.</span>Reply<span class="token operator">&lt;</span>Any<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">val</span> name <span class="token operator">=</span> <span class="token punctuation">(</span>message <span class="token keyword">as</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Any<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span>\n        <span class="token keyword">val</span> age <span class="token operator">=</span> <span class="token punctuation">(</span>message <span class="token keyword">as</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Any<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">]</span>\n\n        <span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token function">mapOf</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span> <span class="token keyword">to</span> <span class="token string">&quot;hello,<span class="token interpolation variable">$name</span>&quot;</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;age&quot;</span> <span class="token keyword">to</span> <span class="token string">&quot;<span class="token interpolation variable">$age</span>&quot;</span>\n        <span class="token punctuation">)</span>\n\n        reply<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// message 是传入的参数，由于 Flutter 端传入的是 Map，所以上面的解析按照 Map 解析。</span>\n<span class="token comment">// reply.reply() 是返回给 Flutter 的结果。</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code>\n<span class="token keyword">class</span> MainActivity<span class="token operator">:</span> <span class="token function">FlutterActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">configureFlutterEngine</span><span class="token punctuation">(</span><span class="token annotation builtin">@NonNull</span> flutterEngine<span class="token operator">:</span> FlutterEngine<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        GeneratedPluginRegistrant<span class="token punctuation">.</span><span class="token function">registerWith</span><span class="token punctuation">(</span>flutterEngine<span class="token punctuation">)</span>\n \n        <span class="token keyword">val</span> channel <span class="token operator">=</span> <span class="token function">BasicMessageChannel</span><span class="token punctuation">(</span>\n                flutterEngine<span class="token punctuation">.</span>dartExecutor<span class="token punctuation">.</span>binaryMessenger<span class="token punctuation">,</span>\n                <span class="token string">&quot;com.example.messagechannel/interop&quot;</span><span class="token punctuation">,</span>\n                StringCodec<span class="token punctuation">.</span>INSTANCE<span class="token punctuation">)</span>\n \n        <span class="token comment">// Receive messages from Dart</span>\n        channel<span class="token punctuation">.</span><span class="token function">setMessageHandler</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> reply <span class="token operator">-&gt;</span>\n            Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;Android&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Received message = <span class="token interpolation variable">$message</span>&quot;</span><span class="token punctuation">)</span>\n            reply<span class="token punctuation">.</span><span class="token function">reply</span><span class="token punctuation">(</span><span class="token string">&quot;Reply from Android&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n \n        <span class="token comment">// Send message to Dart</span>\n        <span class="token function">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">postDelayed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            channel<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World from Android&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> reply <span class="token operator">-&gt;</span>\n                Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;Android&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;<span class="token interpolation variable">$reply</span>&quot;</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="eventchannel" tabindex="-1"><a class="header-anchor" href="#eventchannel" aria-hidden="true">#</a> EventChannel</h3><p>用于数据流（event streams）的通信。有监听功能，比如电量变化之后直接推送数据给flutter端</p><p><strong>flutter 端：</strong></p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">//创建通道</span>\n<span class="token keyword">final</span> <span class="token class-name">EventChannel</span> eventChannel <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token class-name">EventChannel</span><span class="token punctuation">(</span><span class="token string">&#39;eventChannel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//开始监听数据</span>\neventChannel<span class="token punctuation">.</span><span class="token function">receiveBroadcastStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">print</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>android 端：</strong></p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code>\n<span class="token keyword">class</span> MainActivity<span class="token operator">:</span> <span class="token function">FlutterActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> channel<span class="token operator">:</span> EventChannel\n    <span class="token keyword">var</span> eventSink<span class="token operator">:</span> EventSink<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span>\n \n    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">configureFlutterEngine</span><span class="token punctuation">(</span><span class="token annotation builtin">@NonNull</span> flutterEngine<span class="token operator">:</span> FlutterEngine<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        GeneratedPluginRegistrant<span class="token punctuation">.</span><span class="token function">registerWith</span><span class="token punctuation">(</span>flutterEngine<span class="token punctuation">)</span>\n \n        channel <span class="token operator">=</span> <span class="token function">EventChannel</span><span class="token punctuation">(</span>flutterEngine<span class="token punctuation">.</span>dartExecutor<span class="token punctuation">.</span>binaryMessenger<span class="token punctuation">,</span> <span class="token string">&quot;com.example.eventchannel/interop&quot;</span><span class="token punctuation">)</span>\n        channel<span class="token punctuation">.</span><span class="token function">setStreamHandler</span><span class="token punctuation">(</span>\n                <span class="token keyword">object</span> <span class="token operator">:</span> StreamHandler <span class="token punctuation">{</span>\n                    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onListen</span><span class="token punctuation">(</span>arguments<span class="token operator">:</span> Any<span class="token operator">?</span><span class="token punctuation">,</span> events<span class="token operator">:</span> EventSink<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        eventSink <span class="token operator">=</span> events\n                        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;Android&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EventChannel onListen called&quot;</span><span class="token punctuation">)</span>\n                        <span class="token function">Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">postDelayed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                            eventSink<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;Android&quot;</span><span class="token punctuation">)</span>\n                            <span class="token comment">//eventSink?.endOfStream()</span>\n                            <span class="token comment">//eventSink?.error(&quot;error code&quot;, &quot;error message&quot;,&quot;error details&quot;)</span>\n                        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span>\n                    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCancel</span><span class="token punctuation">(</span>arguments<span class="token operator">:</span> Any<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        Log<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span><span class="token string">&quot;Android&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EventChannel onCancel called&quot;</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="flutter-与-android-消息通信示例" tabindex="-1"><a class="header-anchor" href="#flutter-与-android-消息通信示例" aria-hidden="true">#</a> flutter 与 Android 消息通信示例</h2><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code> <span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token class-name">String</span> methodName <span class="token operator">=</span> <span class="token string">&#39;zjAndroidPush&#39;</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">static</span> <span class="token class-name">MethodChannel</span> _methodChannel <span class="token operator">=</span> <span class="token class-name">MethodChannel</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">/// flutter  invokeMethod to android</span>\n  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sendToAndroid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">await</span> _methodChannel<span class="token punctuation">.</span><span class="token function">invokeMethod</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">///</span>\n  <span class="token comment">/// android  invokeMethod callback</span>\n  <span class="token comment">///</span>\n  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">_msglistenerCallbackInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    _methodChannel<span class="token punctuation">.</span><span class="token function">setMethodCallHandler</span><span class="token punctuation">(</span><span class="token punctuation">(</span>call<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>call<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;msgCallback&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">_msgHandler</span><span class="token punctuation">(</span>call<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>android</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>package top<span class="token punctuation">.</span>zhijia<span class="token punctuation">.</span>zjmerchant<span class="token punctuation">;</span>\n\n<span class="token comment">// import android.app.Activity;</span>\n<span class="token comment">// import android.os.Bundle;</span>\n<span class="token comment">// import android.text.TextUtils;</span>\n<span class="token comment">// import android.util.Log;</span>\n<span class="token comment">// import android.widget.TextView;</span>\n\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span>Intent</span><span class="token punctuation">;</span>\n<span class="token comment">// import org.json.JSONException;</span>\n<span class="token comment">// import org.json.JSONObject;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>view<span class="token punctuation">.</span></span>WindowManager</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span>Activity</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span>Bundle</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span>TextUtils</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Log</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span></span>TextView</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>NonNull</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">androidx<span class="token punctuation">.</span>lifecycle<span class="token punctuation">.</span></span>Lifecycle</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>JSONException</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span>JSONObject</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>flutter<span class="token punctuation">.</span>embedding<span class="token punctuation">.</span>android<span class="token punctuation">.</span></span>FlutterActivity</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>flutter<span class="token punctuation">.</span>embedding<span class="token punctuation">.</span>android<span class="token punctuation">.</span></span>FlutterFragment</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>flutter<span class="token punctuation">.</span>embedding<span class="token punctuation">.</span>engine<span class="token punctuation">.</span></span>FlutterEngine</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>flutter<span class="token punctuation">.</span>embedding<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>GeneratedPluginRegister</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>flutter<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span>MethodChannel</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>flutter<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span>BinaryMessenger</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * Created by jiguang on 17/7/5.\n */</span>\n<span class="token comment">// Activity FlutterActivity</span>\npublic <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">FlutterActivity</span> <span class="token punctuation">{</span>\n    private <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> TAG <span class="token operator">=</span> <span class="token string">&quot;OpenClickActivity&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">/**\n     * 消息Id\n     **/</span>\n    private <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> KEY_MSGID <span class="token operator">=</span> <span class="token string">&quot;msg_id&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">/**\n     * 该通知的下发通道\n     **/</span>\n    private <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> KEY_WHICH_PUSH_SDK <span class="token operator">=</span> <span class="token string">&quot;rom_type&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">/**\n     * 通知标题\n     **/</span>\n    private <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> KEY_TITLE <span class="token operator">=</span> <span class="token string">&quot;n_title&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">/**\n     * 通知内容\n     **/</span>\n    private <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> KEY_CONTENT <span class="token operator">=</span> <span class="token string">&quot;n_content&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">/**\n     * 通知附加字段\n     **/</span>\n    private <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> KEY_EXTRAS <span class="token operator">=</span> <span class="token string">&quot;n_extras&quot;</span><span class="token punctuation">;</span>\n    <span class="token comment">/**\n     * 通知附加字段\n     **/</span>\n    private <span class="token keyword">static</span> <span class="token class-name">MethodChannel</span> methodChannel<span class="token punctuation">;</span>\n    <span class="token comment">/**\n     * 厂商通道 通知消息 的参数\n     **/</span>\n    private <span class="token keyword">static</span> <span class="token class-name">String</span> pushExtras<span class="token punctuation">;</span>\n    <span class="token comment">/**\n     * flutter 通信\n     **/</span>\n    private <span class="token keyword">static</span> <span class="token class-name">BinaryMessenger</span> messenger<span class="token punctuation">;</span>\n\n    @<span class="token class-name">Override</span>\n    protected <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;---onCreate---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * 二次点击 执行\n     **/</span>\n    @<span class="token class-name">Override</span>\n    protected <span class="token keyword">void</span> <span class="token function">onNewIntent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onNewIntent</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;---onNewIntent---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setIntent</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>messenger <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">msgHandler</span><span class="token punctuation">(</span>messenger<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    @<span class="token class-name">Override</span>\n    protected <span class="token keyword">void</span> <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;--onStart--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>messenger <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token function">msgHandler</span><span class="token punctuation">(</span>messenger<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * 二次点击\n     **/</span>\n    @<span class="token class-name">Override</span>\n    protected <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;--onResume--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * flutter 通信\n     **/</span>\n    @<span class="token class-name">Override</span>\n    public <span class="token keyword">void</span> <span class="token function">configureFlutterEngine</span><span class="token punctuation">(</span><span class="token class-name">FlutterEngine</span> flutterEngine<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configureFlutterEngine</span><span class="token punctuation">(</span>flutterEngine<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        messenger <span class="token operator">=</span> flutterEngine<span class="token punctuation">.</span><span class="token function">getDartExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">msgHandler</span><span class="token punctuation">(</span>messenger<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;-configureFlutterEngine&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">/**\n     * flutter 消息处理\n     **/</span>\n    public <span class="token keyword">void</span> <span class="token function">msgHandler</span><span class="token punctuation">(</span><span class="token class-name">BinaryMessenger</span> messenger<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 与flutter 建立连接</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>methodChannel <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n            methodChannel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MethodChannel</span><span class="token punctuation">(</span>messenger<span class="token punctuation">,</span> <span class="token string">&quot;zjAndroidPush&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token function">handleOpenClick</span><span class="token punctuation">(</span>methodChannel<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        methodChannel<span class="token punctuation">.</span><span class="token function">setMethodCallHandler</span><span class="token punctuation">(</span>\n                <span class="token punctuation">(</span>call<span class="token punctuation">,</span> result<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span>call<span class="token punctuation">.</span>method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;zjAndroidPush&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;消息了了了了了了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        <span class="token comment">//  触发 flutter 的方法</span>\n                        methodChannel<span class="token punctuation">.</span><span class="token function">invokeMethod</span><span class="token punctuation">(</span><span class="token string">&quot;msgCallback&quot;</span><span class="token punctuation">,</span> pushExtras<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        result<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>pushExtras<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                        result<span class="token punctuation">.</span><span class="token function">notImplemented</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    private <span class="token keyword">void</span> <span class="token function">handleOpenClick</span><span class="token punctuation">(</span><span class="token class-name">MethodChannel</span> methodChannel<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;用户点击打开了通知&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token comment">//获取华为平台附带的jpush信息</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            data <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">//获取fcm、oppo、vivo、华硕、小米平台附带的jpush信息</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">TextUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getExtras</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            data <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getExtras</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;JMessageExtra&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;msg content is &quot;</span> <span class="token operator">+</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">TextUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> msgId <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">optString</span><span class="token punctuation">(</span>KEY_MSGID<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            byte whichPushSDK <span class="token operator">=</span> <span class="token punctuation">(</span>byte<span class="token punctuation">)</span> jsonObject<span class="token punctuation">.</span><span class="token function">optInt</span><span class="token punctuation">(</span>KEY_WHICH_PUSH_SDK<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> title <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">optString</span><span class="token punctuation">(</span>KEY_TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> content <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">optString</span><span class="token punctuation">(</span>KEY_CONTENT<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> extras <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">optString</span><span class="token punctuation">(</span>KEY_EXTRAS<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;msgId:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>msgId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;title:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;content:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;extras:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>extras<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;platform:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">getPushSDKName</span><span class="token punctuation">(</span>whichPushSDK<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG <span class="token operator">+</span> <span class="token string">&quot;--2&quot;</span><span class="token punctuation">,</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            pushExtras <span class="token operator">=</span> extras<span class="token punctuation">;</span>\n            <span class="token comment">//上报点击事件</span>\n            methodChannel<span class="token punctuation">.</span><span class="token function">invokeMethod</span><span class="token punctuation">(</span><span class="token string">&quot;msgCallback&quot;</span><span class="token punctuation">,</span> extras<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JSONException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">&quot;parse notification error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    private <span class="token class-name">String</span> <span class="token function">getPushSDKName</span><span class="token punctuation">(</span>byte whichPushSDK<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n        <span class="token keyword">switch</span> <span class="token punctuation">(</span>whichPushSDK<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span>\n                name <span class="token operator">=</span> <span class="token string">&quot;jpush&quot;</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n                name <span class="token operator">=</span> <span class="token string">&quot;xiaomi&quot;</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n                name <span class="token operator">=</span> <span class="token string">&quot;huawei&quot;</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>\n                name <span class="token operator">=</span> <span class="token string">&quot;meizu&quot;</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>\n                name <span class="token operator">=</span> <span class="token string">&quot;oppo&quot;</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>\n                name <span class="token operator">=</span> <span class="token string">&quot;vivo&quot;</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token number">6</span><span class="token punctuation">:</span>\n                name <span class="token operator">=</span> <span class="token string">&quot;asus&quot;</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> <span class="token number">8</span><span class="token punctuation">:</span>\n                name <span class="token operator">=</span> <span class="token string">&quot;fcm&quot;</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">default</span><span class="token punctuation">:</span>\n                name <span class="token operator">=</span> <span class="token string">&quot;jpush&quot;</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br></div></div>',27),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);