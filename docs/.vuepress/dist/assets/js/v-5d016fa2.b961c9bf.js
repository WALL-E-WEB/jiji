"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[748],{6049:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-5d016fa2",path:"/study/5.JQuery/JQuery.html",title:"方法拓展",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"JQuery",slug:"jquery",children:[{level:3,title:"获取",slug:"获取",children:[]},{level:3,title:"属性操作",slug:"属性操作",children:[]},{level:3,title:"JQ节点操作",slug:"jq节点操作",children:[]},{level:3,title:"index()",slug:"index",children:[]},{level:3,title:"创建元素",slug:"创建元素",children:[]},{level:3,title:"添加",slug:"添加",children:[]},{level:3,title:"移除",slug:"移除",children:[]},{level:3,title:"类名操作",slug:"类名操作",children:[]}]},{level:2,title:"动画",slug:"动画",children:[]},{level:2,title:"三大家族",slug:"三大家族",children:[]},{level:2,title:"事件",slug:"事件",children:[{level:3,title:"移除事件",slug:"移除事件",children:[]},{level:3,title:"事件触发",slug:"事件触发",children:[]},{level:3,title:"事件对象",slug:"事件对象",children:[]},{level:3,title:"自定义事件",slug:"自定义事件",children:[]}]},{level:2,title:"链式语法注意点",slug:"链式语法注意点",children:[]}],filePathRelative:"study/5.JQuery/JQuery.md",git:{updatedTime:1639555747e3,contributors:[{name:"jia.top",email:"jia.top@jiatopdeiMac.lan",commits:1}]}}},5544:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});const p=(0,a(6252).uE)('<h2 id="jquery" tabindex="-1"><a class="header-anchor" href="#jquery" aria-hidden="true">#</a> JQuery</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>官网传送门<span class="token operator">:</span><span class="token operator">&lt;</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">jquery.com</span><span class="token regex-delimiter">/</span></span>\n中文<span class="token operator">:</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">jquery.cuishifeng.cn</span><span class="token regex-delimiter">/</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>JQ设计思想</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>方法统一<span class="token punctuation">;</span>\n隐式迭代<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>jq入口函数</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token number">2</span>种语法<span class="token punctuation">)</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\njq入口函数与原生入口函数的区别\n​\ta<span class="token punctuation">.</span>数量不同<span class="token operator">:</span>原生入口函数只能一个<span class="token punctuation">,</span>jq可以多个<span class="token punctuation">;</span>\n​\tb<span class="token punctuation">.</span>加载时期不同<span class="token operator">:</span>\n​\t\t\tjq入口函数<span class="token operator">:</span><span class="token constant">DOM</span>树加载完毕就执行\n​\t\t\t原生入口函数<span class="token operator">:</span><span class="token constant">DOM</span>树<span class="token operator">+</span>所有外部资源路径\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>JQ对象</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>使用jq语法获取的对象<span class="token punctuation">;</span>\n使用<span class="token constant">DOM</span>语法获取的对象<span class="token punctuation">;</span>\n\t<span class="token constant">DOM</span>对象：使用js原生的api获取的元素对象<span class="token punctuation">;</span>\n\tjQuery对象：使用jquery的方法\n\n​<span class="token constant">JQ</span>对象与<span class="token constant">DOM</span>对象的区别<span class="token operator">:</span>\n\t两者互不兼容<span class="token operator">:</span>\n\t\t原生对象无法使用<span class="token constant">JQ</span>语法<span class="token punctuation">;</span>\n\t\t<span class="token constant">JQ</span>对象不能使用原生语法<span class="token punctuation">;</span>\n    <span class="token constant">JQ</span>对象的本质<span class="token operator">:</span>一个伪数组<span class="token punctuation">.</span>\n\n​Dom 对象和 jq对象互转<span class="token operator">:</span>\n \t<span class="token keyword">var</span> box2 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n \t<span class="token keyword">var</span> box <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token operator">--</span>把<span class="token constant">DOM</span>对象 <span class="token keyword">this</span> 转成 jq对象<span class="token punctuation">;</span>\n\n\n​$是一个函数对象\n\t$函数对象三种功能<span class="token operator">:</span>\n\t\t<span class="token number">1.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;选择器&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span>获取元素<span class="token punctuation">;</span>\n\t\t<span class="token number">2.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">:</span>入口函数<span class="token punctuation">;</span>\n\t\t<span class="token number">3.</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token constant">DOM</span>对象<span class="token punctuation">)</span><span class="token operator">:</span><span class="token constant">DOM</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token constant">JQ</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="获取" tabindex="-1"><a class="header-anchor" href="#获取" aria-hidden="true">#</a> 获取</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>与css一致\n基本选择器<span class="token operator">:</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.class&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div,p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 并集\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;li.one&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>交集 \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>层次选择器<span class="token operator">:</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;ul&gt;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>子代\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;ul li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>后代\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;ul+li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;ul~li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>过滤选择器<span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;选择器:过滤条件&#39;</span><span class="token punctuation">)</span><span class="token comment">//下标0开始</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;li:odd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>奇数\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;li:even&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>偶数\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;li:eq(1)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>指定下标\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>可以放入变量<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="属性操作" tabindex="-1"><a class="header-anchor" href="#属性操作" aria-hidden="true">#</a> 属性操作</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>特点<span class="token operator">:</span>\n\t获取一切样式<span class="token punctuation">,</span><span class="token punctuation">(</span>底层<span class="token operator">:</span>windom<span class="token punctuation">.</span>getComputedStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t获取字符串<span class="token punctuation">,</span>带单位<span class="token punctuation">;</span>\n\t可以修改<span class="token punctuation">;</span>\n\n多个元素<span class="token punctuation">,</span>获取操作操作只会返回第一个<span class="token punctuation">;</span>\n\t\t<span class="token function">设置操作</span><span class="token punctuation">(</span>赋值<span class="token punctuation">)</span><span class="token function">支持隐式迭代</span><span class="token punctuation">(</span>遍历<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">CSS</span>属性\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&#39;属性名&#39;</span><span class="token punctuation">)</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&#39;属性名&#39;</span><span class="token punctuation">,</span>属性值<span class="token punctuation">)</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span>\n        <span class="token punctuation">{</span>width<span class="token operator">:</span><span class="token string">&#39;100px&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>height<span class="token operator">:</span><span class="token string">&#39;200px&#39;</span><span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>html属性\n获取内容<span class="token operator">:</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 获取\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&#39;内容&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>设置\n    \n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n标准属性<span class="token punctuation">,</span>自定义\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>获取\n    <span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;属性名&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;属性值&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>设置\n    \n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>input属性\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//value</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//disabled checked selected </span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="jq节点操作" tabindex="-1"><a class="header-anchor" href="#jq节点操作" aria-hidden="true">#</a> JQ节点操作</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>获取子元素\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prev</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\t<span class="token comment">//上一兄弟 prev</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//下一兄弟</span>\n\t\n\t<span class="token constant">JQ</span>特有<span class="token operator">:</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n\t\t除了自身之外所有同辈元素<span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;选择器&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t获取所有子元素<span class="token punctuation">;</span><span class="token comment">//本质递归实现</span>\n\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>子代的li<span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>所有后代的li\n\njq对象返回<span class="token constant">JQ</span>对象<span class="token punctuation">,</span>所以可链式语法<span class="token punctuation">;</span>\n\t一个对象可以连续调用方法<span class="token punctuation">;</span>\n\t原理<span class="token operator">:</span>在方法中返回自身<span class="token punctuation">;</span>\n\t\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><table><thead><tr><th>名称</th><th>用法</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td>children(selector)</td><td>$(&#39;ul&#39;).children(&#39;li&#39;)</td><td style="text-align:left;">相当于$(&#39;ul&gt;li&#39;)，子类选择器</td></tr><tr><td>find(selector)</td><td>$(&#39;ul&#39;).find(&#39;li&#39;);</td><td style="text-align:left;">相当于$(&#39;ul li&#39;),后代选择器</td></tr><tr><td>siblings(selector)</td><td>$(&#39;#first&#39;).siblings(&#39;li&#39;);</td><td style="text-align:left;">查找兄弟节点，不包括自己本身。</td></tr><tr><td>parent()</td><td>$(&#39;#first&#39;).parent();</td><td style="text-align:left;">查找父亲</td></tr><tr><td>eq(index)</td><td>$(&#39;li&#39;).eq(2);</td><td style="text-align:left;">相当于$(&#39;li:eq(2)&#39;),index从0开始</td></tr><tr><td>next()</td><td>$(&#39;li&#39;).next()</td><td style="text-align:left;">找下一个兄弟</td></tr><tr><td>prev()</td><td>$(&#39;li&#39;).prev()</td><td style="text-align:left;">找上一个兄弟</td></tr></tbody></table><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>显示<span class="token operator">:</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    底层是设置display为block\n\n隐藏： <span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    底层是设置display为none\n\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n排他<span class="token operator">:</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sibilings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>onmouseente不支持事件冒泡<span class="token punctuation">;</span>\nonmouseover\n\nonmouseleave 不支持事件冒泡\nonmouseout\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="index" tabindex="-1"><a class="header-anchor" href="#index" aria-hidden="true">#</a> index()</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   获取下标<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="创建元素" tabindex="-1"><a class="header-anchor" href="#创建元素" aria-hidden="true">#</a> 创建元素</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\t<span class="token comment">//innerHTML</span>\n\n\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\t\t\t<span class="token comment">//document.createElement();</span>\n\n<span class="token keyword">var</span> $str <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;p&gt;我我我哦我我&lt;/p&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$str<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="添加" tabindex="-1"><a class="header-anchor" href="#添加" aria-hidden="true">#</a> 添加</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>父元素<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>子元素<span class="token punctuation">)</span><span class="token punctuation">;</span>\n子元素<span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>父元素<span class="token punctuation">)</span><span class="token punctuation">;</span> 添加到最后面<span class="token punctuation">;</span>\n\n父元素<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span>子元素<span class="token punctuation">)</span>\t添加到最前面<span class="token punctuation">;</span>\n兄弟<span class="token constant">A</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>兄弟<span class="token constant">B</span><span class="token punctuation">)</span>\t\t<span class="token constant">B</span>元素插入到<span class="token constant">A</span>元素前面<span class="token punctuation">;</span>\n兄弟<span class="token constant">A</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>兄弟<span class="token constant">B</span><span class="token punctuation">)</span>\t\t<span class="token constant">B</span>元素插入到<span class="token constant">A</span>元素后面<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="移除" tabindex="-1"><a class="header-anchor" href="#移除" aria-hidden="true">#</a> 移除</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>全部清空<span class="token operator">:</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\t全部\n\n单个移除\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 自杀<span class="token punctuation">;</span> <span class="token punctuation">(</span>底层<span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="类名操作" tabindex="-1"><a class="header-anchor" href="#类名操作" aria-hidden="true">#</a> 类名操作</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加\t不会覆盖原有类名</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//移除 </span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\t<span class="token comment">//判断是否有类名  //返回 true or false</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//如果有则移除,没有则添加</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="动画" tabindex="-1"><a class="header-anchor" href="#动画" aria-hidden="true">#</a> 动画</h2><p>show()</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>显示动画 <span class="token comment">// 由display:none --&gt;到地display:block的过程;</span>\n参数<span class="token number">1</span><span class="token operator">:</span>动画事件 时间 <span class="token comment">//可选 //fast:200  noraml:400 slow:600</span>\n参数<span class="token number">2</span><span class="token operator">:</span>动画完成回调函数 <span class="token comment">//可选</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    \n\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 显示\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&#39;noraml&#39;</span><span class="token punctuation">)</span>\n\n<span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n有display<span class="token operator">:</span>block 则隐藏\n有display<span class="token operator">:</span>none  则显示\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>滑入 滑出</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">slideDown</span><span class="token punctuation">(</span><span class="token string">&#39;时间&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//不填入默认noraml</span>\n\n<span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>淡入 淡出</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>第一个值<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token string">&quot;slow&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;normal&quot;</span><span class="token punctuation">,</span> or <span class="token string">&quot;fast&quot;</span>\n第二个值<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>swing <span class="token punctuation">,</span> linear\n<span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 淡入\n\n<span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 淡出\n\n<span class="token function">fadeToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> \n\n<span class="token function">fadeTo</span><span class="token punctuation">(</span><span class="token string">&#39;时间&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;指定透明度&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>自定义动画</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\n属性对象\n动画时间\n动画速度  默认 缓动swing   匀速 linear\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>\n\t<span class="token punctuation">{</span>\n\t\tleft<span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span>\n\t\ttop<span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token string">&#39;swing&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n\n<span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>清除之前动画\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>动画队列</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>开始动画<span class="token operator">:</span>多个动画排列依次执行\n结束动画队列<span class="token operator">:</span>以本次为准<span class="token punctuation">;</span>\n\nclearQueue<span class="token operator">:</span>如果设置成<span class="token boolean">true</span>，则清空队列。可以立即结束动画。\njumpToEnd<span class="token operator">:</span>如果设置成<span class="token boolean">true</span>，则完成队列。可以立即完成动画。\n\n<span class="token function">stop</span><span class="token punctuation">(</span>stopAll<span class="token punctuation">,</span>goToEnd<span class="token punctuation">)</span>\n\n<span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span> 结束动画  <span class="token function">本次执行</span><span class="token punctuation">(</span>瞬间到达<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span>\t结束动画<span class="token punctuation">,</span>返回\n<span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span> \t\n<span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span> 默认\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="三大家族" tabindex="-1"><a class="header-anchor" href="#三大家族" aria-hidden="true">#</a> 三大家族</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>特性<span class="token operator">:</span>\n\t特点与原生一样<span class="token punctuation">;</span>\n\t不同的是可以更改<span class="token punctuation">,</span>修改width<span class="token operator">/</span>height<span class="token punctuation">;</span>\n<span class="token function">outerWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">outerHeigth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//content + padding +border</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>\n<span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span>\n\n<span class="token function">innerWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">innerHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token comment">//width+padding</span>\n\n<span class="token function">outerWidth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">outerHeigth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">//content + padding +border+margin</span>\n\n\n<span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t特点<span class="token operator">:</span>获取的是一个对象<span class="token punctuation">;</span>不能修改<span class="token punctuation">;</span>\n\t\n\n<span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t自生到整个页面左上角\n    不定位也可获取<span class="token punctuation">;</span><span class="token comment">//jq会自动给元素加相对定位</span>\n\n\t特点<span class="token operator">:</span>可获取<span class="token punctuation">,</span>可修改<span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        left<span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span>\n        top<span class="token operator">:</span><span class="token number">200</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n获取页面可视区域大小<span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n\n\n<span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scroll</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>注册<span class="token operator">:</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\t<span class="token comment">//已取消\t解决1</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//已取消 事件委托 ,原理事件冒泡 解决1.2</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>\n\t特点<span class="token operator">:</span>\n\t\t<span class="token number">1.</span>不能一行注册两个事件<span class="token punctuation">;</span>\n\t\t<span class="token number">2.</span>不能动态添加事件<span class="token punctuation">;</span>\n\ndocument<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function-variable function">onclick</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>nodeName <span class="token operator">==</span> <span class="token string">&#39;DIV&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        shijian\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token number">1.</span>同时注册<span class="token punctuation">;</span>\n\t<span class="token number">2.</span>动态注册<span class="token punctuation">;</span>\n\t\t给元素注册<span class="token operator">:</span>不支持动态注册<span class="token punctuation">;</span>\n\t\t给body注册<span class="token operator">:</span>支持<span class="token punctuation">;</span>\n\t<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>click mouseenter <span class="token punctuation">,</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        \n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="移除事件" tabindex="-1"><a class="header-anchor" href="#移除事件" aria-hidden="true">#</a> 移除事件</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//不传参 移除所有事件</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="事件触发" tabindex="-1"><a class="header-anchor" href="#事件触发" aria-hidden="true">#</a> 事件触发</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>事件主动触发<span class="token operator">:</span>\n原生<span class="token operator">:</span>ele<span class="token punctuation">.</span><span class="token function">onclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>触发事件<span class="token punctuation">;</span>\n\n <span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 触发事件<span class="token punctuation">;</span>\n<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>\njs原生<span class="token operator">:</span>\n\t<span class="token keyword">let</span> btn_1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn-1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> btn_2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;btn-2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \tbtn_1<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        \t<span class="token keyword">var</span> myEvent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        \tbtn_2<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>myEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \t<span class="token punctuation">}</span>\n    btn_2<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;OK&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// do something</span>\n    <span class="token punctuation">}</span>\n<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="事件对象" tabindex="-1"><a class="header-anchor" href="#事件对象" aria-hidden="true">#</a> 事件对象</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JQ</span>事件对象和原生一样<span class="token punctuation">;</span><span class="token constant">JQ</span>解决兼容问题<span class="token punctuation">;</span>\n\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    e<span class="token punctuation">.</span>pageX<span class="token punctuation">;</span>\n    e<span class="token punctuation">.</span>target<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;keydown&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    e<span class="token punctuation">.</span>keyCode  <span class="token comment">//</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="自定义事件" tabindex="-1"><a class="header-anchor" href="#自定义事件" aria-hidden="true">#</a> 自定义事件</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token constant">CLICK_EVENT_KEY</span> <span class="token operator">=</span> <span class="token string">&#39;click-bounced&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> <span class="token constant">BOUNCING_DURATION</span> <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>\n$<span class="token punctuation">.</span>event<span class="token punctuation">.</span>special<span class="token punctuation">[</span><span class="token constant">CLICK_EVENT_KEY</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  bindType<span class="token operator">:</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">handle</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  \t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">&#39;clicking&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    \t<span class="token keyword">return</span>\n  \t<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n    \t<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">&#39;clicking&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \tevent<span class="token punctuation">.</span>handleObj<span class="token punctuation">.</span><span class="token function">handler</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \t<span class="token keyword">var</span> _this <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n      <span class="token function">$</span><span class="token punctuation">(</span>_this<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">&#39;clicking&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">BOUNCING_DURATION</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;button.bounced&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token constant">CLICK_EVENT_KEY</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.alert&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.alert&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token operator">++</span> num<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="链式语法注意点" tabindex="-1"><a class="header-anchor" href="#链式语法注意点" aria-hidden="true">#</a> 链式语法注意点</h2><div class="language-jq ext-jq line-numbers-mode"><pre class="language-jq"><code>设置类的方法<span class="token punctuation">,</span>返回jq对象<span class="token punctuation">;</span>\n获取类的方法<span class="token punctuation">,</span>返回的属性值<span class="token punctuation">;</span>不能链式<span class="token punctuation">,</span>如<span class="token punctuation">:</span><span class="token c-style-function function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n<span class="token keyword">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>返回上一级DOM div\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>显示迭代</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span>ele</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//下标</span>\n\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>elem<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token constant">DOM</span>元素\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>查看jq版本号</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>jquery<span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>JQuery<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>jquery<span class="token punctuation">)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">$</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>jquery<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>如实现多库共存</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>释放$控制器\n\n<span class="token keyword">var</span> $<span class="token number">3</span> <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">noConFlict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$<span class="token number">3.</span>fn<span class="token punctuation">.</span>jquery<span class="token punctuation">)</span><span class="token comment">//使用库3 用$3</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>jquery<span class="token punctuation">)</span>\n\n任然想使用$ <span class="token function">用$3</span>\n<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    里面$是$<span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>$<span class="token number">3</span><span class="token punctuation">)</span>\n外面是 $ 是$\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h1 id="方法拓展" tabindex="-1"><a class="header-anchor" href="#方法拓展" aria-hidden="true">#</a> 方法拓展</h1><p>拓展方法：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">；</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t$<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\t<span class="token function-variable function">method1</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t<span class="token function-variable function">method2</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n$<span class="token punctuation">.</span><span class="token function">method1</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n$<span class="token punctuation">.</span><span class="token function">method2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>拓展函数：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">；</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\t<span class="token function-variable function">fn1</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t <span class="token comment">// 默认参数</span>\n\t\t\toptions <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\t\t\tagm1<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t\t\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\n\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n$<span class="token punctuation">.</span><span class="token function">method1</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n$<span class="token punctuation">.</span><span class="token function">method2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',68),t={},c=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);